{"remainingRequest":"D:\\TutorsClubBitBucket\\tutorsclubweb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\TutorsClubBitBucket\\tutorsclubweb\\node_modules\\@alyle\\ui\\esm5\\alyle-ui.js","dependencies":[{"path":"D:\\TutorsClubBitBucket\\tutorsclubweb\\node_modules\\@alyle\\ui\\esm5\\alyle-ui.js","mtime":1533191670919},{"path":"D:\\TutorsClubBitBucket\\tutorsclubweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533191679839},{"path":"D:\\TutorsClubBitBucket\\tutorsclubweb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1533191671924}],"contextDependencies":[],"result":["import { __spread } from 'tslib';\nimport { InjectionToken, Injectable, Inject, RendererFactory2, NgModule, Directive, Input, Optional, Renderer2, ElementRef, ViewContainerRef, Output, EventEmitter, ComponentFactoryResolver, SkipSelf, ChangeDetectorRef, NgZone, defineInjectable, inject } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as _chroma from 'chroma-js';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nfunction getContrastYIQ(hexcolor) {\n    var r = parseInt(hexcolor.substr(0, 2), 16);\n    var g = parseInt(hexcolor.substr(2, 2), 16);\n    var b = parseInt(hexcolor.substr(4, 2), 16);\n    var yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n}\nvar contrast = '#fff';\nvar defaultTheme = {\n    name: 'default',\n    primary: {\n        default: '#2196F3',\n        contrast: contrast\n    },\n    accent: {\n        default: '#ff4b73',\n        contrast: contrast\n    },\n    warn: {\n        default: '#FF5252',\n        contrast: contrast\n    },\n    scheme: 'light',\n    typography: {\n        fontFamily: \"'Roboto', sans-serif\",\n        fontSize: 14\n    },\n    colorSchemes: {\n        light: {\n            background: {\n                default: '#fafafa',\n                primary: '#fff',\n                secondary: '#fafafa',\n                tertiary: '#f5f5f5',\n                base: '#E0E0E0'\n            },\n            text: {\n                default: 'rgba(0, 0, 0, 0.87)',\n                primary: 'rgba(0, 0, 0, 0.87)',\n                secondary: 'rgba(0, 0, 0, 0.54)',\n                disabled: 'rgba(0, 0, 0, 0.38)',\n                hint: 'rgba(0, 0, 0, 0.38)'\n            },\n            divider: 'rgba(0, 0, 0, 0.12)',\n            colorShadow: '#777777',\n            button: {\n                disabled: 'rgba(0, 0, 0, 0.11)'\n            },\n            radio: {\n                radioOuterCircle: 'rgba(0, 0, 0, 0.43)'\n            },\n            menu: {\n                bg: '#fff'\n            },\n            drawer: {\n                backdrop: 'rgba(0,0,0,.6)'\n            },\n            bar: '#f5f5f5',\n            input: {\n                label: 'rgba(0, 0, 0, 0.4)',\n                underline: 'rgba(0, 0, 0, 0.11)'\n            },\n        },\n        dark: {\n            primary: {\n                default: '#9c27b0',\n                contrast: contrast\n            },\n            accent: {\n                default: '#ffeb3b',\n                contrast: 'rgba(0, 0, 0, 0.87)'\n            },\n            warn: {\n                default: '#f44336',\n                contrast: 'rgba(0, 0, 0, 0.87)'\n            },\n            background: {\n                default: '#303030',\n                primary: '#424242',\n                secondary: '#303030',\n                tertiary: '#212121',\n                base: '#0E0E0E'\n            },\n            text: {\n                default: '#fff',\n                primary: '#fff',\n                secondary: 'rgba(255, 255, 255, 0.70)',\n                disabled: 'rgba(255, 255, 255, 0.50)',\n                hint: 'rgba(255, 255, 255, 0.50)'\n            },\n            button: {\n                disabled: 'rgba(255, 255, 255, 0.30)'\n            },\n            radio: {\n                radioOuterCircle: 'rgba(255, 255, 255, 0.55)'\n            },\n            menu: {\n                bg: '#424242'\n            },\n            drawer: {\n                backdrop: 'rgba(49,49,49,.6)'\n            },\n            bar: '#212121',\n            divider: 'rgba(255, 255, 255, 0.12)',\n            colorShadow: 'rgba(0, 0, 0, 1)',\n            input: {\n                label: 'rgba(255, 255, 255, 0.4)',\n                underline: 'rgba(255, 255, 255, 0.11)'\n            }\n        }\n    },\n    iconButton: {\n        size: '48px'\n    },\n    icon: {\n        fontSize: '24px'\n    },\n    input: {\n        withColor: 'primary'\n    }\n};\nvar THEME_VARIABLES = new InjectionToken('ly.theme.variables');\nvar IS_CORE_THEME = new InjectionToken('ly.is.root');\nvar StyleMap = /** @class */ /*@__PURE__*/ (function () {\n    function StyleMap(themeName) {\n        this.themeName = themeName;\n    }\n    return StyleMap;\n}());\nvar ThemeVariables = /** @class */ /*@__PURE__*/ (function () {\n    function ThemeVariables() {\n    }\n    return ThemeVariables;\n}());\nvar hasV8BreakIterator = (typeof (Intl) !== 'undefined' && ((Intl)).v8BreakIterator);\nvar Platform = /** @class */ /*@__PURE__*/ (function () { function Platform() {\n    this.EDGE = Platform.isBrowser && /(edge)/i.test(navigator.userAgent);\n    this.TRIDENT = Platform.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n    this.BLINK = Platform.isBrowser &&\n        (!!(((window)).chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT);\n    this.WEBKIT = Platform.isBrowser &&\n        /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n    this.IOS = Platform.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !((window)).MSStream;\n    this.FIREFOX = Platform.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n    this.ANDROID = Platform.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    this.SAFARI = Platform.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n} Platform.isBrowser = typeof document === 'object' && !!document; return Platform; }());\nvar LyRootService = /** @class */ /*@__PURE__*/ (function () {\n    function LyRootService(_document, rendererFactory) {\n        this.rendererFactory = rendererFactory;\n        this.themeRootMap = new Map();\n        this.themeMap = new Map();\n        this.themes = new Map();\n        this.renderer = this.rendererFactory.createRenderer(null, null);\n        var container;\n        if (Platform.isBrowser && (container = window.document.querySelector('ly-core-theme'))) {\n            this.rootContainer = container;\n        }\n        else {\n            this.rootContainer = this.renderer.createElement('ly-core-theme');\n            this.renderer.insertBefore(_document.body, this.rootContainer, _document.body.firstElementChild);\n        }\n    }\n    LyRootService.prototype.registerTheme = function (palette) {\n        if (!this.themeMap.has(palette.name)) {\n            this.themeMap.set(palette.name, new Map());\n            this.themes.set(palette.name, palette);\n        }\n        return {\n            map: this.themeMap.get(palette.name),\n            palette: this.themes.get(palette.name)\n        };\n    };\n    LyRootService.prototype.getTheme = function (name) {\n        return this.themes.get(name);\n    };\n    LyRootService.ngInjectableDef = defineInjectable({ factory: function LyRootService_Factory() { return new LyRootService(inject(DOCUMENT), inject(RendererFactory2)); }, token: LyRootService, providedIn: \"root\" });\n    return LyRootService;\n}());\nvar classId = 0;\nvar prefix;\nif (Platform.isBrowser) {\n    prefix = 'ly_';\n}\nelse {\n    prefix = 'l';\n}\nvar LyTheme = /** @class */ /*@__PURE__*/ (function () {\n    function LyTheme(config, isRoot, document, rootService) {\n        this.isRoot = isRoot;\n        this.document = document;\n        this.rootService = rootService;\n        var newConfig = mergeDeep(defaultTheme, config);\n        var _palette = newConfig;\n        var theme = this.rootService.registerTheme(_palette);\n        if (!theme.palette[\"colorSchemes\"][theme.palette[\"scheme\"]]) {\n            throw new Error(\"scheme \" + theme.palette[\"scheme\"] + \" not exist in \" + theme.palette[\"name\"]);\n        }\n        this._styleMap = theme.map;\n        this.palette = mergeDeep.apply(void 0, __spread([theme.palette, { scheme: config.scheme }], theme.palette[\"colorSchemes\"][newConfig.scheme]));\n        this.themeName = newConfig.name;\n        this.Id = \"\" + this.themeName;\n        this.setCoreStyle();\n    }\n    LyTheme.prototype.getClassKey = function (color, of) {\n        return this.Id + \"-\" + color.replace(':', '__') + \"-\" + of;\n    };\n    LyTheme.prototype.setScheme = function (scheme) {\n        var newPalette = this.rootService.getTheme(this.palette.name);\n        this.palette = mergeDeep.apply(void 0, __spread([newPalette], newPalette[\"colorSchemes\"][scheme], [{ scheme: scheme }]));\n        this.updateOthersStyles();\n    };\n    LyTheme.prototype.colorOf = function (value) {\n        return get(this.palette, value);\n    };\n    LyTheme.prototype.getColorv2 = function (colorName, colors, shade) {\n        var ar = colors ? colors : this.palette;\n        if (ar[colorName]) {\n            if (typeof ar[colorName].color === 'string' || typeof ar[colorName] === 'string') {\n                return ar[colorName].color || ar[colorName];\n            }\n            else {\n                return ar[colorName].color[shade];\n            }\n        }\n        else {\n            return colorName;\n        }\n    };\n    LyTheme.prototype.setStyle = function (key, fn) {\n        var newKey = createKeyOf(key + this.Id + this.palette.scheme);\n        var mapStyles = this._styleMap;\n        return this._createStyle(key, newKey, fn, mapStyles, this.Id);\n    };\n    LyTheme.prototype.setRootStyle = function (key, fn) {\n        var newKey = createKeyOf(key);\n        var mapStyles = this.rootService.themeRootMap;\n        return this._createStyle(key, newKey, fn, mapStyles, 'root');\n    };\n    LyTheme.prototype._createStyle = function (key, newKey, fn, mapStyles, _for) {\n        var styleData = ({ key: newKey, fn: fn });\n        if (mapStyles.has(newKey)) {\n            return mapStyles.get(newKey).id;\n        }\n        else if (Platform.isBrowser && (styleData.styleContainer = this.document.body.querySelector(\"ly-core-theme style[data-key=\\\"\" + newKey + \"\\\"]\"))) {\n            styleData.styleContent = styleData.styleContainer.innerHTML;\n            styleData.id = styleData.styleContainer.dataset.id;\n        }\n        else {\n            classId++;\n            styleData.id = \"\" + prefix + classId.toString(36);\n            styleData.styleContainer = this.rootService.renderer.createElement('style');\n            var content = this.createStyleContent(styleData);\n            styleData.styleContent = content;\n            this.rootService.renderer.appendChild(styleData.styleContainer, styleData.styleContent);\n            this.rootService.renderer.appendChild(this.rootService.rootContainer, styleData.styleContainer);\n            if (!Platform.isBrowser) {\n                this.rootService.renderer.setAttribute(styleData.styleContainer, \"data-key\", \"\" + newKey);\n                this.rootService.renderer.setAttribute(styleData.styleContainer, \"data-id\", \"\" + styleData.id);\n            }\n        }\n        mapStyles.set(newKey, styleData);\n        return styleData.id;\n    };\n    LyTheme.prototype.createStyleContent = function (styleData) {\n        return this.rootService.renderer.createText(\".\" + styleData.id + \"{\" + styleData.fn() + \"}\");\n    };\n    LyTheme.prototype.updateStyleValue = function (style, styleText) {\n        var styleContent = styleText;\n        this.rootService.renderer.removeChild(style.styleContainer, style.styleContent);\n        this.rootService.renderer.appendChild(style.styleContainer, styleContent);\n        this._styleMap.set(style.key, Object.assign({}, style, {\n            styleContainer: style.styleContainer,\n            styleContent: styleContent\n        }));\n    };\n    LyTheme.prototype.updateOthersStyles = function () {\n        var _this = this;\n        this._styleMap.forEach(function (styleData) {\n            var newStyleValue = _this.createStyleContent(styleData);\n            _this.updateStyleValue(styleData, newStyleValue);\n        });\n    };\n    LyTheme.prototype.updateClass = function (elementRef, renderer, newStyleData, oldStyleData) {\n        if (oldStyleData) {\n            renderer.removeClass(elementRef.nativeElement, oldStyleData.id);\n        }\n        renderer.addClass(elementRef.nativeElement, newStyleData.id);\n    };\n    LyTheme.prototype.updateClassName = function (element, renderer, newClassname, oldClassname) {\n        if (oldClassname) {\n            renderer.removeClass(element, oldClassname);\n        }\n        renderer.addClass(element, newClassname);\n    };\n    LyTheme.prototype.setCoreStyle = function () {\n        var _this = this;\n        if (this.isRoot) {\n            var classname = this.setStyle('body', function () {\n                return (\"background-color:\" + _this.palette[\"background\"].primary + \";\" +\n                    (\"color:\" + _this.palette[\"text\"].default + \";\") +\n                    (\"font-family:\" + _this.palette[\"typography\"].fontFamily + \";\") +\n                    \"margin:0;\");\n            });\n            this.rootService.renderer.addClass(this.document.body, classname);\n        }\n    };\n    return LyTheme;\n}());\nfunction mergeDeep() {\n    var objects = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        objects[_i] = arguments[_i];\n    }\n    var isObject = function (obj) { return obj && typeof obj === 'object'; };\n    return objects.reduce(function (prev, obj) {\n        Object.keys(obj).forEach(function (key) {\n            var pVal = prev[key];\n            var oVal = obj[key];\n            if (Array.isArray(pVal) && Array.isArray(oVal)) {\n                prev[key] = pVal.concat.apply(pVal, __spread(oVal));\n            }\n            else if (isObject(pVal) && isObject(oVal)) {\n                prev[key] = mergeDeep(pVal, oVal);\n            }\n            else {\n                prev[key] = oVal;\n            }\n        });\n        return prev;\n    }, {});\n}\nfunction parsePalette(palette) {\n    var iterate = function (obj, keyObject) {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var key$ = keyObject ? keyObject + \"__\" + key : key;\n                if (obj[key] !== null &&\n                    typeof obj[key] === 'string' &&\n                    key !== 'default') {\n                    obj[key] = { default: obj[key] };\n                }\n                if (typeof obj[key] === 'object') {\n                    iterate(obj[key], key$);\n                }\n            }\n        }\n        return obj;\n    };\n    return iterate(Object.assign({}, palette));\n}\nfunction createKeyOf(str) {\n    var hash = 0;\n    var len = str.length;\n    for (var i = 0; i < len; i++) {\n        hash = ((hash << 5) - hash) + str.charCodeAt(i);\n        hash |= 0;\n    }\n    return hash.toString(36);\n}\nfunction get(obj, path) {\n    var _path = path instanceof Array ? path : path.split(':');\n    for (var i = 0; i < _path.length; i++) {\n        obj = obj[_path[i]] || path;\n    }\n    return typeof obj === 'string' ? (obj) : (obj['default']);\n}\nvar chroma = _chroma;\nvar shadowKeyUmbraOpacity = 0.2;\nvar shadowKeyPenumbraOpacity = 0.14;\nvar shadowAmbientShadowOpacity = 0.12;\nvar elevations = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1],\n    [0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2],\n    [0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2],\n    [0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0],\n    [0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0],\n    [0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0],\n    [0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1],\n    [0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2],\n    [0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2],\n    [0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3],\n    [0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3],\n    [0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4],\n    [0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4],\n    [0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4],\n    [0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5],\n    [0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5],\n    [0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5],\n    [0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6],\n    [0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6],\n    [0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7],\n    [0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7],\n    [0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7],\n    [0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8],\n    [0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8]\n];\nfunction shadowBuilder(elevation, color) {\n    if (elevation === void 0) {\n        elevation = 1;\n    }\n    if (color === void 0) {\n        color = '#000';\n    }\n    var Color = chroma(color);\n    var colors = [\n        Color.alpha(shadowKeyUmbraOpacity).css(),\n        Color.alpha(shadowKeyPenumbraOpacity).css(),\n        Color.alpha(shadowAmbientShadowOpacity).css()\n    ];\n    var e = elevations[elevation];\n    return \"box-shadow:\" + e[0] + \"px \" + e[1] + \"px \" + e[2] + \"px \" + e[3] + \"px \" + colors[0] + \",\" + e[4] + \"px \" + e[5] + \"px \" + e[6] + \"px \" + e[7] + \"px \" + colors[1] + \",\" + e[8] + \"px \" + e[9] + \"px \" + e[10] + \"px \" + e[11] + \"px \" + colors[2] + \";\";\n}\nvar RandomId = /** @class */ /*@__PURE__*/ (function () {\n    function RandomId() {\n    }\n    Object.defineProperty(RandomId.prototype, \"generate\", {\n        get: function () {\n            var id = (Math.random() + Date.now());\n            return id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RandomId;\n}());\nfunction getParents(el, parentSelector) {\n    if (parentSelector === undefined) {\n        parentSelector = 'body';\n    }\n    var parents = [];\n    var p = el.parentNode;\n    var pxz = null;\n    while (!pxz) {\n        var o = p;\n        parents.push(o);\n        p = o.parentNode;\n        pxz = p.querySelector(parentSelector);\n    }\n    return parents[parents.length - 1];\n}\nfunction getHexValue(intInput) {\n    var result = intInput.toString(16);\n    if (result.length < 2) {\n        result = '0' + result;\n    }\n    return result;\n}\nfunction Color(red, green, blue, alpha) {\n    return {\n        red: red,\n        green: green,\n        blue: blue,\n        alpha: alpha,\n        toHex: function () {\n            return getHexValue(red) + getHexValue(green) + getHexValue(blue);\n        }\n    };\n}\nvar ɵ0 = function (color, bgColor) {\n    var alpha = color.alpha;\n    function getTintValue(tint, bgTint) {\n        var tmp = Math.floor((1 - alpha) * bgTint + alpha * tint);\n        if (tmp > 255) {\n            return 255;\n        }\n        return tmp;\n    }\n    return Color(getTintValue(color.red, bgColor.red), getTintValue(color.green, bgColor.green), getTintValue(color.blue, bgColor.blue));\n};\nvar colorConverter = {\n    convertToHex: ɵ0\n};\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nvar ɵ1 = function (rgba) {\n    rgba = rgba.replace('rgba(', '')\n        .replace(')', '')\n        .replace(' ', '');\n    var splittedRgba = rgba.split(',');\n    return Color(parseInt(splittedRgba[0], 10), parseInt(splittedRgba[1], 10), parseInt(splittedRgba[2], 10), parseFloat(splittedRgba[3]) || 1);\n};\nvar ɵ2 = function (hexString) {\n    hexString = hexString.replace('#', '');\n    var rgbArr = [];\n    function getHexPartByIndex(index) {\n        switch (hexString.length) {\n            case 3:\n                return hexString[index] + hexString[index];\n            default:\n                index *= 2;\n                return hexString[index] + hexString[index + 1];\n        }\n    }\n    hexString = hexString.replace('#', '');\n    for (var i = 0; i < hexString.length; i++) {\n        rgbArr.push(parseInt(getHexPartByIndex(i), 16));\n    }\n    return Color(rgbArr[0], rgbArr[1], rgbArr[2], 1);\n};\nvar ɵ3 = function hslToRgb(hsla) {\n    hsla = hsla.replace('hsla(', '')\n        .replace('hsl(', '')\n        .replace(')', '')\n        .replace(' ', '');\n    hsla = hsla.split(',');\n    var h = parseInt(hsla[0], 10) / 360;\n    var s = parseInt(hsla[1], 10) / 100;\n    var l = parseInt(hsla[2], 10) / 100;\n    var a = parseFloat(hsla[3]) || 1;\n    var r, g, b;\n    if (s == 0) {\n        r = g = b = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\n};\nvar colorStringParser = {\n    rgba: ɵ1,\n    hex: ɵ2,\n    hsla: ɵ3\n};\nfunction getColorType(colorString) {\n    if (colorString.indexOf('rgba') !== -1 || colorString.indexOf('rgb') !== -1) {\n        return 'rgba';\n    }\n    if (colorString.indexOf('hsla') !== -1 || colorString.indexOf('hsl') !== -1) {\n        return 'hsla';\n    }\n    return 'hex';\n}\nfunction getColorForString(inputString) {\n    return colorStringParser[getColorType(inputString)](inputString);\n}\nfunction trim(str) {\n    return str.replace(/^\\s+|\\s+$/gm, '');\n}\nfunction rgbaToHex(rgba) {\n    var parts = rgba.substring(rgba.indexOf('(')).split(','), r = parseInt(trim(parts[0].substring(1)), 10), g = parseInt(trim(parts[1]), 10), b = parseInt(trim(parts[2]), 10), a = parseFloat(trim(parts[3].substring(0, parts[3].length - 1))).toFixed(2);\n    return ('#' + r.toString(16) + g.toString(16) + b.toString(16) + (Number(a) * 255).toString(16).substring(0, 2));\n}\nfunction componentToHex(c) {\n    c = Number(c);\n    var hex = c.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\nfunction toRgb(str, alpha) {\n    return hexToRgba(colorConverter.convertToHex(getColorForString(str), getColorForString('#ffffff')).toHex(), alpha || 1);\n}\nfunction converterToHex(str) {\n    return colorConverter.convertToHex(getColorForString(str), getColorForString('#ffffff')).toHex();\n}\nfunction rgbToHex(rgb) {\n    var toRgb = rgb;\n    if (toRgb.substr(0, 4) === 'rgba') {\n        toRgb = toRgb.slice(5);\n    }\n    else {\n        toRgb = toRgb.slice(4);\n    }\n    toRgb = toRgb.slice(0, -1);\n    toRgb = toRgb.replace(' ', '');\n    toRgb = toRgb.split(',');\n    return componentToHex(toRgb[0]) + componentToHex(toRgb[1]) + componentToHex(toRgb[2]);\n}\nfunction rgbTransparent(rgba) {\n    if (typeof rgba === 'string') {\n        rgba = rgba.slice(0, -1);\n        rgba = (rgba.split(',')[3]) * 1;\n        if (typeof rgba === 'number') {\n            rgba = 1;\n        }\n    }\n    else {\n        rgba = 1;\n    }\n    return rgba;\n}\nfunction hexToRgba(hex, tr) {\n    if (tr === void 0) {\n        tr = -1;\n    }\n    var _default = hex;\n    var transparent = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0\n    };\n    if (tr === -1) {\n        tr = rgbTransparent(hex);\n    }\n    hex = String(hex);\n    if ((hex.substr(0, 4) === 'rgba') && !!hex.split(',')[3]) {\n        tr = parseFloat(hex.split(',')[3].replace(')', ''));\n        hex = String(hex);\n        if (hex.length !== 6 && hex.length !== 3) {\n            hex = rgbToHex(hex);\n        }\n    }\n    if (hex !== undefined && hex !== null && hex !== 'transparent') {\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n            return r + r + g + g + b + b;\n        });\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        var colorr = 0;\n        var colorg = 0;\n        var colorb = 0;\n        if (result) {\n            colorr = parseInt(result[1], 16);\n            colorg = parseInt(result[2], 16);\n            colorb = parseInt(result[3], 16);\n        }\n        return result ? {\n            json: {\n                r: colorr,\n                g: colorg,\n                b: colorb,\n                a: tr\n            },\n            color: \"rgba(\" + colorr + \", \" + colorg + \", \" + colorb + \", \" + tr + \")\",\n        } : {\n            json: transparent,\n            color: \"\" + _default,\n        };\n    }\n    else {\n        return {\n            json: transparent,\n            color: \"rgba(\" + 0 + \", \" + 0 + \", \" + 0 + \", \" + 0 + \")\",\n        };\n    }\n}\nvar LY_GLOBAL_CONTRAST = new InjectionToken('ly.global.contrast');\nvar NgTranscludeDirective = /** @class */ /*@__PURE__*/ (function () {\n    function NgTranscludeDirective(_viewRef) {\n        this._viewRef = _viewRef;\n        this.ngTranscludeChange = new EventEmitter();\n        this.viewRef = _viewRef;\n    }\n    Object.defineProperty(NgTranscludeDirective.prototype, \"ngTransclude\", {\n        get: function () {\n            return this._ngTransclude;\n        },\n        set: function (templateRef) {\n            this._ngTransclude = templateRef;\n            if (templateRef) {\n                this.viewRef.createEmbeddedView(templateRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTranscludeDirective.prototype.ngAfterContentInit = function () {\n        this.ngTranscludeChange.emit(true);\n    };\n    NgTranscludeDirective.prototype.ngOnDestroy = function () {\n        this.viewRef.detach();\n    };\n    return NgTranscludeDirective;\n}());\nvar NgTranscludeModule = /** @class */ /*@__PURE__*/ (function () {\n    function NgTranscludeModule() {\n    }\n    return NgTranscludeModule;\n}());\nfunction isWindow(obj) {\n    return obj !== null && obj === obj.window;\n}\nfunction getWindow(elem) {\n    return isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\nfunction exactPosition(elem) {\n    var docElem, win, box = { top: 0, left: 0 };\n    var doc = elem && elem.ownerDocument;\n    docElem = doc.documentElement;\n    if (typeof elem.getBoundingClientRect !== typeof undefined) {\n        box = elem.getBoundingClientRect();\n    }\n    win = getWindow(doc);\n    return {\n        top: box.top + win.pageYOffset - docElem.clientTop,\n        left: box.left + win.pageXOffset - docElem.clientLeft\n    };\n}\nfunction toBoolean(value) {\n    return value != null && \"\" + value !== 'false';\n}\nfunction IsBoolean() {\n    return function (target, key) {\n        var definition = Object.getOwnPropertyDescriptor(target, key);\n        if (definition) {\n            Object.defineProperty(target, key, {\n                get: definition.get,\n                set: function (newValue) {\n                    definition.set(toBoolean(newValue));\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n        else {\n            Object.defineProperty(target, key, {\n                get: function () {\n                    return this['__' + key];\n                },\n                set: function (newValue) {\n                    this['__' + key] = toBoolean(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    };\n}\nfunction provideTheme(theme) {\n    return [\n        [LyTheme],\n        { provide: THEME_VARIABLES, useValue: theme },\n    ];\n}\nvar AlyleUIModule = /** @class */ /*@__PURE__*/ (function () {\n    function AlyleUIModule() {\n    }\n    AlyleUIModule.forRoot = function (theme) {\n        return {\n            ngModule: AlyleUIModule,\n            providers: [\n                provideTheme(theme),\n                { provide: IS_CORE_THEME, useValue: true },\n            ]\n        };\n    };\n    AlyleUIModule.forChild = function (theme) {\n        return {\n            ngModule: AlyleUIModule,\n            providers: [\n                provideTheme(theme),\n                { provide: IS_CORE_THEME, useValue: false }\n            ]\n        };\n    };\n    return AlyleUIModule;\n}());\nvar ProvidedInTheme = {\n    providedIn: AlyleUIModule\n};\nvar LyShadowService = /** @class */ /*@__PURE__*/ (function () {\n    function LyShadowService(theme) {\n        this.theme = theme;\n        this.elevation = 1;\n    }\n    LyShadowService.prototype.setShadow = function (elementRef, renderer, val, oldClassName) {\n        var _this = this;\n        var keys;\n        var elevation;\n        var color = 'colorShadow';\n        if (val) {\n            keys = val.join('');\n            elevation = val[0];\n            color = val[1] || color;\n        }\n        else {\n            keys = \"\" + this.elevation + color;\n            elevation = this.elevation;\n        }\n        var classname = this.theme.setStyle(\"shadow\" + keys, function () {\n            return \"\" + shadowBuilder(elevation, _this.theme.colorOf(color));\n        });\n        this.theme.updateClassName(elementRef.nativeElement, renderer, classname, oldClassName);\n        return classname;\n    };\n    LyShadowService.ngInjectableDef = defineInjectable({ factory: function LyShadowService_Factory() { return new LyShadowService(inject(LyTheme)); }, token: LyShadowService, providedIn: AlyleUIModule });\n    return LyShadowService;\n}());\nvar LyBgColorAndRaised = /** @class */ /*@__PURE__*/ (function () {\n    function LyBgColorAndRaised(theme, renderer, elementRef, shadow, contrast) {\n        this.theme = theme;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.shadow = shadow;\n        this.contrast = contrast;\n        this.elevation = 3;\n    }\n    Object.defineProperty(LyBgColorAndRaised.prototype, \"bg\", {\n        get: function () {\n            return this._bg;\n        },\n        set: function (value) {\n            this._bg = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LyBgColorAndRaised.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            this._color = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LyBgColorAndRaised.prototype, \"raised\", {\n        get: function () { return this._raisedState; },\n        set: function (val) { this._raisedState = toBoolean(val); },\n        enumerable: true,\n        configurable: true\n    });\n    LyBgColorAndRaised.prototype.setAutoContrast = function () {\n        this.contrast = true;\n    };\n    LyBgColorAndRaised.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        var newClassName;\n        var raisedĸey = this._raisedState === true ? 'raised' : '';\n        var key = '';\n        if ((this.contrast && !this.color || this.color === 'auto') && this.bg) {\n            key = \"contrast\" + this.bg + this._raisedState + this.elevation;\n            newClassName = this.theme.setStyle(\"ly-\" + key, this.contrastStyle.bind(this));\n        }\n        else if (this.bg && this.color) {\n            key = \"b&\\u0138\" + this.bg + this.color + this._raisedState + this.elevation;\n            newClassName = this.theme.setStyle(\"ly-\" + key, this.bgColorStyle.bind(this));\n        }\n        else if (this.raised && !this.bg) {\n            key = raisedĸey + this.color || '';\n            newClassName = this.theme.setStyle(\"ly-\" + key, function () {\n                var styles = \"background-color:\" + _this.theme.palette[\"background\"].primary + \";\";\n                var color = '';\n                var colorShadow;\n                if (_this.color) {\n                    color = _this.theme.colorOf(_this.color);\n                    colorShadow = color;\n                    styles += \"color:\" + color + \";\";\n                }\n                else {\n                    colorShadow = _this.theme.palette[\"colorShadow\"];\n                }\n                if (_this._raisedState) {\n                    styles += shadowBuilder(_this.elevation, colorShadow);\n                }\n                return styles;\n            });\n        }\n        else if (this.bg || this.color) {\n            var changeKey_1 = this.bg ? ['bg', 'background', this.bg] : ['ĸ', 'color', this.color];\n            var color = changeKey_1[2];\n            key = \"\" + changeKey_1[0] + color + this._raisedState + this.elevation;\n            newClassName = this.theme.setStyle(\"ly-\" + key, function () {\n                var _color = _this.theme.colorOf(_this.bg || _this.color);\n                var styles = changeKey_1[1] + \":\" + _color + \";\";\n                if (_this._raisedState) {\n                    styles += shadowBuilder(_this.elevation, _color);\n                }\n                return styles;\n            });\n        }\n        else {\n            key = \"raised\" + this._raisedState + this.elevation;\n            newClassName = this.theme.setStyle(\"ly-\" + key, function () {\n                if (_this._raisedState) {\n                    return shadowBuilder(_this.elevation, _this.theme.palette[\"colorShadow\"]);\n                }\n                else {\n                    return shadowBuilder(0, _this.theme.palette[\"colorShadow\"]);\n                }\n            });\n        }\n        this.theme.updateClassName(this.elementRef.nativeElement, this.renderer, newClassName, this._currentClassName);\n        this._currentClassName = newClassName;\n    };\n    LyBgColorAndRaised.prototype.contrastStyle = function () {\n        var cssBg = this.theme.colorOf(this.bg);\n        this._color = this.theme.colorOf(this.bg + \":contrast\");\n        var styles = \"background:\" + cssBg + \";color:\" + this._color + \";\";\n        if (this._raisedState) {\n            styles += shadowBuilder(this.elevation, cssBg);\n        }\n        return styles;\n    };\n    LyBgColorAndRaised.prototype.bgColorStyle = function () {\n        var cssBg = this.theme.colorOf(this.bg);\n        var cssColor = this.theme.colorOf(this.color);\n        var styles = \"background:\" + cssBg + \";color:\" + cssColor + \";\";\n        if (this._raisedState) {\n            styles += shadowBuilder(this.elevation, cssBg);\n        }\n        return styles;\n    };\n    return LyBgColorAndRaised;\n}());\nvar LyNewRaised = /** @class */ /*@__PURE__*/ (function () {\n    function LyNewRaised(elementRef, renderer, shadow) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.shadow = shadow;\n        this.elevation = 3;\n    }\n    Object.defineProperty(LyNewRaised.prototype, \"newRaised\", {\n        set: function (value) {\n            this.currentClassName = this.shadow.setShadow(this.elementRef, this.renderer, [value[0] || this.elevation, value[1] || 'colorShadow'], this.currentClassName);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LyNewRaised;\n}());\nvar LyCommonModule = /** @class */ /*@__PURE__*/ (function () {\n    function LyCommonModule() {\n    }\n    return LyCommonModule;\n}());\nvar LyOverlayContainer = /** @class */ /*@__PURE__*/ (function () {\n    function LyOverlayContainer() {\n        if (Platform.isBrowser) {\n            var container = document.createElement('ly-overlay-container');\n            document.body.appendChild(container);\n            this._containerElement = container;\n        }\n    }\n    Object.defineProperty(LyOverlayContainer.prototype, \"containerElement\", {\n        get: function () {\n            return this._containerElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LyOverlayContainer;\n}());\nvar DomService = /** @class */ /*@__PURE__*/ (function () {\n    function DomService(componentFactoryResolver, overlayContainer) {\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.overlayContainer = overlayContainer;\n    }\n    DomService.prototype.attach = function (_hostViewContainerRef, component, template) {\n        var _this = this;\n        var viewRef = _hostViewContainerRef.createEmbeddedView(template);\n        viewRef.detectChanges();\n        this._viewContainerRef = _hostViewContainerRef;\n        viewRef.rootNodes.forEach(function (rootNode) { return _this.addChild(rootNode); });\n    };\n    DomService.prototype.addChild = function (child) {\n        this.overlayContainer.containerElement.appendChild(child);\n    };\n    DomService.prototype.getDomElementFromComponentRef = function (componentRef) {\n        return (((componentRef.hostView))\n            .rootNodes[0]);\n    };\n    DomService.prototype.destroyRef = function (componentRef, delay) {\n        var _this = this;\n        setTimeout(function () {\n            if (_this._viewContainerRef) {\n                _this._viewContainerRef.detach();\n                _this._viewContainerRef.clear();\n            }\n        }, delay);\n    };\n    return DomService;\n}());\nfunction LY_OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer) {\n    return parentContainer || new LyOverlayContainer();\n}\nvar LY_OVERLAY_CONTAINER_PROVIDER = {\n    provide: LyOverlayContainer,\n    deps: [[new Optional(), new SkipSelf(), LyOverlayContainer]],\n    useFactory: LY_OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\nvar LxDomModule = /** @class */ /*@__PURE__*/ (function () {\n    function LxDomModule() {\n    }\n    return LxDomModule;\n}());\nvar FocusStatus = {\n    DEFAULT: 'default',\n    KEYBOARD: 'keyboard',\n};\nvar LyFocusState = /** @class */ /*@__PURE__*/ (function () {\n    function LyFocusState(elementRef, _ngZone, _renderer, _cd) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._renderer = _renderer;\n        this.stateMap = new Map();\n        this._eventHandlers = new Map();\n        this._stateSubject = new Subject();\n        this.lyFocusChange = new EventEmitter();\n        this._eventOptions = ({ passive: true });\n        if (Platform.isBrowser) {\n            this._eventHandlers\n                .set('focus', this.on.bind(this))\n                .set('blur', this.on.bind(this))\n                .set('touchstart', this.on.bind(this))\n                .set('mousedown', this.on.bind(this));\n            var element = elementRef.nativeElement;\n            this.setTriggerElement(element);\n            var ob = this._stateSubject.asObservable();\n            this._stateSubscription = ob\n                .pipe(debounceTime(111))\n                .subscribe(function (e) {\n                _this.state = e;\n                _this._updateClass();\n                _this.lyFocusChange.emit(e);\n            });\n        }\n    }\n    LyFocusState.prototype._updateState = function () {\n        var state;\n        if (this.stateMap.has('blur')) {\n            this.stateMap.clear();\n        }\n        else if (this.stateMap.has('focus') && this.stateMap.has('mousedown') || this.stateMap.has('focus') && this.stateMap.has('touchstart')) {\n            state = FocusStatus.DEFAULT;\n        }\n        else if (this.stateMap.has('focus')) {\n            state = FocusStatus.KEYBOARD;\n        }\n        this._stateSubject.next(state);\n    };\n    LyFocusState.prototype.on = function (event) {\n        this.stateMap.set(event.type, true);\n        this._updateState();\n    };\n    LyFocusState.prototype._updateClass = function () {\n        var _this = this;\n        var element = this._containerElement;\n        var state = this.state;\n        var toggleClass = function (className, shouldSet) { return shouldSet ? _this._renderer.addClass(element, className) : _this._renderer.removeClass(element, className); };\n        toggleClass(\"ly-focused\", !!state);\n        for (var key in FocusStatus) {\n            if (FocusStatus.hasOwnProperty(key)) {\n                var className = FocusStatus[key];\n                toggleClass(\"ly-\" + className + \"-focused\", state === className);\n            }\n        }\n    };\n    LyFocusState.prototype.setTriggerElement = function (element) {\n        var _this = this;\n        if (this._containerElement) {\n            this._eventHandlers.forEach(function (fn, type) {\n                _this._containerElement.removeEventListener(type, fn, _this._eventOptions);\n            });\n        }\n        if (element) {\n            this._ngZone.runOutsideAngular(function () {\n                return _this._eventHandlers.forEach(function (fn, type) {\n                    return element.addEventListener(type, fn, _this._eventOptions);\n                });\n            });\n        }\n        this._containerElement = element;\n    };\n    LyFocusState.prototype.ngOnDestroy = function () {\n        if (Platform.isBrowser) {\n            this._stateSubscription.unsubscribe();\n            this.setTriggerElement(null);\n        }\n    };\n    return LyFocusState;\n}());\nvar LyFocusStateModule = /** @class */ /*@__PURE__*/ (function () {\n    function LyFocusStateModule() {\n    }\n    return LyFocusStateModule;\n}());\nvar AUI_VERSION = '1.7.0-beta.6yqz';\nvar AUI_LAST_UPDATE = '2018-05-19T00:08:37.115Z';\nvar LyThemeStyles = /** @class */ /*@__PURE__*/ (function () { function LyThemeStyles(theme) {\n    this.theme = theme;\n    this.classes = {};\n} LyThemeStyles.ngInjectableDef = defineInjectable({ factory: function LyThemeStyles_Factory() { return new LyThemeStyles(inject(LyTheme)); }, token: LyThemeStyles, providedIn: AlyleUIModule }); return LyThemeStyles; }());\nvar LyGlobalStyles = /** @class */ /*@__PURE__*/ (function () { function LyGlobalStyles(theme) {\n    this.theme = theme;\n    this.classes = {\n        Absolute: this.theme.setRootStyle('Absolute', function () {\n            return (\"position: absolute;\" +\n                \"top: 0;\" +\n                \"bottom: 0;\" +\n                \"left: 0;\" +\n                \"right: 0;\");\n        })\n    };\n} LyGlobalStyles.ngInjectableDef = defineInjectable({ factory: function LyGlobalStyles_Factory() { return new LyGlobalStyles(inject(LyTheme)); }, token: LyGlobalStyles, providedIn: \"root\" }); return LyGlobalStyles; }());\nexport { getContrastYIQ, LyTheme, mergeDeep, parsePalette, shadowBuilder, RandomId, getParents, THEME_VARIABLES, IS_CORE_THEME, StyleMap, ThemeVariables, LyRootService, Platform, Color, trim, rgbaToHex, componentToHex, toRgb, converterToHex, rgbToHex, rgbTransparent, hexToRgba, LyCommonModule, NgTranscludeDirective, NgTranscludeModule, exactPosition, toBoolean, IsBoolean, DomService, LY_OVERLAY_CONTAINER_PROVIDER_FACTORY, LY_OVERLAY_CONTAINER_PROVIDER, LxDomModule, LyFocusStateModule, FocusStatus, LyFocusState, provideTheme, AlyleUIModule, ProvidedInTheme, AUI_VERSION, AUI_LAST_UPDATE, LY_GLOBAL_CONTRAST, LyBgColorAndRaised, LyShadowService, LyThemeStyles, LyGlobalStyles, LyOverlayContainer as ɵb, LyNewRaised as ɵa };\n//# sourceMappingURL=alyle-ui.js.map\n",null]}