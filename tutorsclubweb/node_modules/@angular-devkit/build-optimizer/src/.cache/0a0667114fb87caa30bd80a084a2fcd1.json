{"remainingRequest":"D:\\TutorsClubBitBucket\\tutorsclubweb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\TutorsClubBitBucket\\tutorsclubweb\\node_modules\\@alyle\\ui\\ripple\\esm5\\alyle-ui-ripple.js","dependencies":[{"path":"D:\\TutorsClubBitBucket\\tutorsclubweb\\node_modules\\@alyle\\ui\\ripple\\esm5\\alyle-ui-ripple.js","mtime":1533191670968},{"path":"D:\\TutorsClubBitBucket\\tutorsclubweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533191679839},{"path":"D:\\TutorsClubBitBucket\\tutorsclubweb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1533191671924}],"contextDependencies":[],"result":["import { Platform, LyTheme, ProvidedInTheme, toBoolean, AlyleUIModule } from '@alyle/ui';\nimport { Injectable, NgModule, ElementRef, Input, Directive, NgZone, Renderer2, defineInjectable, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nvar RippleRef = /** @class */ /*@__PURE__*/ (function () {\n    function RippleRef() {\n        this.state = true;\n        this.timestamp = -Date.now();\n        this.container = document.createElement('span');\n    }\n    RippleRef.prototype.end = function () {\n        this.state = false;\n        this.timestamp += Date.now();\n    };\n    return RippleRef;\n}());\nvar Ripple = /** @class */ /*@__PURE__*/ (function () {\n    function Ripple(_ngZone, stylesData, _containerElement, _triggerElement) {\n        this._ngZone = _ngZone;\n        this.stylesData = stylesData;\n        this._containerElement = _containerElement;\n        this._triggerElement = _triggerElement;\n        this._state = true;\n        this._eventHandlers = new Map();\n        this.rippleConfig = {};\n        this._transitionDuration = '950ms';\n        this._eventOptions = ({ passive: true });\n        if (Platform.isBrowser) {\n            if (typeof TouchEvent === 'function' && !!TouchEvent) {\n                this._eventHandlers.set('pointerdown', this.onPointerDown.bind(this));\n                this._eventHandlers.set('touchend', this.onPointerLeave.bind(this));\n            }\n            else {\n                this._eventHandlers.set('mousedown', this.onPointerDown.bind(this));\n            }\n            this._eventHandlers.set('mouseup', this.onPointerLeave.bind(this));\n            this._eventHandlers.set('mouseleave', this.onPointerLeave.bind(this));\n            if (!_triggerElement) {\n                _triggerElement = _containerElement;\n            }\n            this.setTriggerElement(_triggerElement);\n        }\n    }\n    Ripple.prototype.setConfig = function (config) {\n        this.rippleConfig = config;\n    };\n    Object.defineProperty(Ripple.prototype, \"_rectContainer\", {\n        get: function () {\n            return this._containerElement.getBoundingClientRect();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Ripple.prototype.setTriggerElement = function (element) {\n        var _this = this;\n        if (element) {\n            element.classList.add(this.stylesData[0]);\n            this._ngZone.runOutsideAngular(function () {\n                _this._eventHandlers.forEach(function (fn, type) { return element.addEventListener(type, fn, _this._eventOptions); });\n            });\n        }\n        this._triggerElement = element;\n    };\n    Ripple.prototype.createRipple = function (styles) {\n        this._rippleRef = new RippleRef();\n        var container = this._rippleRef.container;\n        container.className = this.stylesData[1];\n        for (var key in styles) {\n            if (styles.hasOwnProperty(key)) {\n                var element = styles[key];\n                if (typeof element === 'number') {\n                    container.style[key] = element + \"px\";\n                }\n                else {\n                    container.style[key] = element;\n                }\n            }\n        }\n        this._containerElement.appendChild(container);\n        window.getComputedStyle(container).getPropertyValue('opacity');\n        container.style.transform = \"scale(1)\";\n    };\n    Ripple.prototype.onPointerDown = function (event) {\n        if (!this.rippleConfig.disabled) {\n            this.endRipple();\n            this.startRipple(event, this.rippleConfig);\n        }\n    };\n    Ripple.prototype.onPointerLeave = function (event) {\n        if (!this.rippleConfig.disabled) {\n            this.endRipple();\n        }\n    };\n    Ripple.prototype.startRipple = function (event, rippleConfig) {\n        var containerRect = this._rectContainer;\n        var x = event.clientX, y = event.clientY;\n        if (rippleConfig.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        var left = x - containerRect.left;\n        var top = y - containerRect.top;\n        var radius = rippleConfig.radius === 'containerSize' ? maxSize(containerRect) / 2 : rippleConfig.radius || rippleRadius(x, y, containerRect);\n        if (rippleConfig.percentageToIncrease) {\n            radius += radius * rippleConfig.percentageToIncrease / 100;\n        }\n        var ripple = this.createRipple({\n            left: left - radius,\n            top: top - radius,\n            width: radius * 2,\n            height: radius * 2,\n            transitionDuration: this._transitionDuration\n        });\n    };\n    Ripple.prototype.runTimeoutOutsideZone = function (fn, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });\n    };\n    Ripple.prototype.endRipple = function () {\n        var rippleRef = this._rippleRef || null;\n        var duration = parseFloat(this._transitionDuration);\n        if (rippleRef && rippleRef.state) {\n            rippleRef.end();\n            this.runTimeoutOutsideZone(function () {\n                rippleRef.container.style.opacity = '0';\n                rippleRef.container.style.transitionDuration = '200ms';\n            }, rippleRef.timestamp < duration ? duration * .15 : 0);\n            this.runTimeoutOutsideZone(function () {\n                rippleRef.container.parentNode.removeChild(rippleRef.container);\n            }, rippleRef.timestamp < duration ? duration * 2 : duration);\n        }\n    };\n    Ripple.prototype.removeEvents = function () {\n        var _this = this;\n        if (this._triggerElement) {\n            this._eventHandlers.forEach(function (fn, type) {\n                _this._triggerElement.removeEventListener(type, fn, _this._eventOptions);\n            });\n        }\n    };\n    return Ripple;\n}());\nfunction rippleRadius(x, y, rect) {\n    var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\nfunction maxSize(rect) {\n    return Math.max(rect.width, rect.height);\n}\nvar LyRippleService = /** @class */ /*@__PURE__*/ (function () { function LyRippleService(theme) {\n    this.theme = theme;\n    this.stylesData = [];\n    this.classes = {\n        root: this.theme.setRootStyle('ripple', function () {\n            return (\"z-index: 0;\" +\n                \"border-radius: inherit;\");\n        })\n    };\n    var host = this.theme.setRootStyle('ripple', function () {\n        return 'position: relative;';\n    });\n    var rippleContainer = this.theme.setRootStyle('ripple-cont', function () {\n        return \"position: absolute;\" +\n            \"width: 5px;\" +\n            \"height: 5px;\" +\n            \"background: currentColor;\" +\n            \"opacity: .19;\" +\n            \"border-radius: 100%;\" +\n            \"-webkit-transform: scale(0);\" +\n            \"transform: scale(0);\" +\n            \"-webkit-transition: opacity ease,-webkit-transform cubic-bezier(.1, 1, 0.5, 1);\" +\n            \"transition: opacity ease,-webkit-transform cubic-bezier(.1, 1, 0.5, 1);\" +\n            \"transition: opacity ease,transform cubic-bezier(.1, 1, 0.5, 1);\" +\n            \"transition: opacity ease,transform cubic-bezier(.1, 1, 0.5, 1);\" +\n            \"pointer-events: none;\";\n    });\n    this.stylesData.push(host, rippleContainer);\n} LyRippleService.ngInjectableDef = defineInjectable({ factory: function LyRippleService_Factory() { return new LyRippleService(inject(LyTheme)); }, token: LyRippleService, providedIn: AlyleUIModule }); return LyRippleService; }());\nvar LyRipple = /** @class */ /*@__PURE__*/ (function () {\n    function LyRipple(rippleService, _elementRef, _ngZone, _renderer) {\n        this.rippleService = rippleService;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._renderer = _renderer;\n        if (Platform.isBrowser) {\n            this.rippleContainer = new Ripple(this._ngZone, this.rippleService.stylesData, this._elementRef.nativeElement);\n        }\n    }\n    Object.defineProperty(LyRipple.prototype, \"lyRippleConfig\", {\n        get: function () {\n            return {\n                centered: toBoolean(this.lyRippleCentered),\n                disabled: toBoolean(this.lyRippleDisabled),\n                sensitive: toBoolean(this.lyRippleSensitive),\n                radius: this.lyRippleRadius,\n                percentageToIncrease: this.lyRipplePercentageToIncrease,\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LyRipple.prototype.ngOnInit = function () {\n        this._updateRipple();\n    };\n    LyRipple.prototype.ngOnChanges = function (changes) {\n        this._updateRipple();\n    };\n    LyRipple.prototype._updateRipple = function () {\n        if (Platform.isBrowser) {\n            this.rippleContainer.setConfig(this.lyRippleConfig);\n        }\n    };\n    LyRipple.prototype.ngOnDestroy = function () {\n        if (this.rippleContainer) {\n            this.rippleContainer.removeEvents();\n        }\n    };\n    return LyRipple;\n}());\nvar LyRippleModule = /** @class */ /*@__PURE__*/ (function () {\n    function LyRippleModule() {\n    }\n    return LyRippleModule;\n}());\nexport { LyRippleModule, LyRipple, LyRippleService, RippleRef, Ripple };\n//# sourceMappingURL=alyle-ui-ripple.js.map\n",null]}