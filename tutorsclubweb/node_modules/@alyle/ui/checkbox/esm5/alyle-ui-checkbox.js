import { Component, Input, Output, EventEmitter, forwardRef, Injectable, NgModule } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { CommonModule } from '@angular/common';

var LY_CHECKBOX_CONTROL_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(function () { return LyCheckbox; }),
    multi: true
};
var CheckboxState = {
    Init: 0,
    Checked: 1,
    Unchecked: 2,
    Indeterminate: 3,
};
CheckboxState[CheckboxState.Init] = "Init";
CheckboxState[CheckboxState.Checked] = "Checked";
CheckboxState[CheckboxState.Unchecked] = "Unchecked";
CheckboxState[CheckboxState.Indeterminate] = "Indeterminate";
var LyCheckbox = /** @class */ (function () {
    function LyCheckbox() {
        this._currentCheckState = CheckboxState.Init;
        this.checked = false;
        this.change = new EventEmitter();
        this.indeterminateChange = new EventEmitter();
        this.onTouched = function () { };
        this._controlValueAccessorChangeFn = function (value) { };
    }
    LyCheckbox.prototype.toggle = function () {
        this.checked = !this.checked;
    };
    LyCheckbox.prototype._onChangeEvent = function (event) {
        event.stopPropagation();
    };
    LyCheckbox.prototype._onInputClick = function (event) {
        var ev = (event.target);
        this.checked = ev.checked;
        this._controlValueAccessorChangeFn(this.checked);
        console.log('_onInputClick', ev.checked);
    };
    LyCheckbox.prototype.writeValue = function (value) {
        this.checked = !!value;
        console.log('value', this.checked);
    };
    LyCheckbox.prototype.registerOnChange = function (fn) {
        this._controlValueAccessorChangeFn = fn;
    };
    LyCheckbox.prototype.ngOnChanges = function (changes) {
        console.log('changes', changes);
        if (changes['src']) {
        }
    };
    LyCheckbox.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    LyCheckbox.prototype.ngOnInit = function () {
    };
    LyCheckbox.prototype.ngAfterContentInit = function () {
    };
    LyCheckbox.prototype.ngOnDestroy = function () {
    };
    return LyCheckbox;
}());
LyCheckbox.decorators = [
    { type: Component, args: [{
                selector: 'ly-checkbox',
                template: "<label>\n  <div class=\"ly-checkbox-container\">\n    <input #input\n           [hidden]=\"false\" type=\"checkbox\"\n           [id]=\"id\"\n           [required]=\"required\"\n           [checked]=\"checked\"\n           [value]=\"value\"\n           [disabled]=\"disabled\"\n           [name]=\"name\"\n           [indeterminate]=\"indeterminate\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           (change)=\"_onChangeEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n  </div>\n</label>\n",
                styles: [":host{display:inline-block}"],
                providers: [LY_CHECKBOX_CONTROL_VALUE_ACCESSOR]
            },] },
];
LyCheckbox.ctorParameters = function () { return []; };
LyCheckbox.propDecorators = {
    "id": [{ type: Input, args: ['id',] },],
    "ariaLabel": [{ type: Input, args: ['attr.aria-label',] },],
    "ariaLabelledby": [{ type: Input, args: ['attr.aria-labelledby',] },],
    "required": [{ type: Input, args: ['required',] },],
    "labelPosition": [{ type: Input, args: ['labelPosition',] },],
    "color": [{ type: Input, args: ['color',] },],
    "value": [{ type: Input, args: ['value',] },],
    "name": [{ type: Input, args: ['name',] },],
    "disabled": [{ type: Input, args: ['disabled',] },],
    "checked": [{ type: Input, args: ['checked',] },],
    "indeterminate": [{ type: Input, args: ['indeterminate',] },],
    "change": [{ type: Output, args: ['change',] },],
    "indeterminateChange": [{ type: Output, args: ['indeterminateChange',] },],
};
var LyCheckboxService = /** @class */ (function () {
    function LyCheckboxService() {
    }
    return LyCheckboxService;
}());
LyCheckboxService.decorators = [
    { type: Injectable },
];
LyCheckboxService.ctorParameters = function () { return []; };
var LyCheckboxModule = /** @class */ (function () {
    function LyCheckboxModule() {
    }
    LyCheckboxModule.forRoot = function () {
        return {
            ngModule: LyCheckboxModule,
        };
    };
    return LyCheckboxModule;
}());
LyCheckboxModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                exports: [LyCheckbox],
                declarations: [LyCheckbox],
                providers: [LyCheckboxService]
            },] },
];

export { LyCheckboxModule, LyCheckboxService, LY_CHECKBOX_CONTROL_VALUE_ACCESSOR, CheckboxState, LyCheckbox };
//# sourceMappingURL=alyle-ui-checkbox.js.map
