{
  "version": 3,
  "file": "alyle-ui-checkbox.umd.min.js",
  "sources": [
    "ng://@alyle/ui/checkbox/out/ly-checkbox/ly-checkbox.component.ts",
    "ng://@alyle/ui/checkbox/out/ly-checkbox.service.ts",
    "ng://@alyle/ui/checkbox/out/ly-checkbox.module.ts"
  ],
  "sourcesContent": [
    "import {\n  Component,\n  OnInit,\n  AfterContentInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const LY_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => LyCheckbox),\n  multi: true\n};\nexport enum CheckboxState {\n  /** The initial state. */\n  Init,\n  /** Checked state. */\n  Checked,\n  /** Unchecked state. */\n  Unchecked,\n  /** Indeterminate state. */\n  Indeterminate,\n}\n\n@Component({\n  selector: 'ly-checkbox',\n  template: `<label>\n  <div class=\"ly-checkbox-container\">\n    <input #input\n           [hidden]=\"false\" type=\"checkbox\"\n           [id]=\"id\"\n           [required]=\"required\"\n           [checked]=\"checked\"\n           [value]=\"value\"\n           [disabled]=\"disabled\"\n           [name]=\"name\"\n           [indeterminate]=\"indeterminate\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           (change)=\"_onChangeEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n  </div>\n</label>\n`,\n  styles: [`:host{display:inline-block}`],\n  providers: [LY_CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class LyCheckbox implements OnInit, AfterContentInit, ControlValueAccessor, OnChanges, OnDestroy {\n  private _currentCheckState: CheckboxState = CheckboxState.Init;\n  @Input('id') id: string;\n  // tslint:disable-next-line:no-input-rename\n  @Input('attr.aria-label') ariaLabel: string;\n  // tslint:disable-next-line:no-input-rename\n  @Input('attr.aria-labelledby') ariaLabelledby: string;\n  @Input('required') required: string;\n  @Input('labelPosition') labelPosition: string;\n  @Input('color') color: string;\n  @Input('value') value: string;\n  @Input('name') name: string;\n  @Input('disabled') disabled: string;\n  @Input('checked') checked = false;\n  @Input('indeterminate') indeterminate: string;\n  @Output('change') change: EventEmitter<any> = new EventEmitter<any>();\n  @Output('indeterminateChange') indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  onTouched: () => any = () => {};\n  private _controlValueAccessorChangeFn: (value: any) => void = (value) => {};\n  constructor() { }\n\n  /** Toggles the `checked` state of the checkbox. */\n  toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  _onChangeEvent(event: Event) {\n    event.stopPropagation();\n  }\n  _onInputClick(event: Event) {\n    const ev = event.target as HTMLInputElement;\n    this.checked = ev.checked;\n    this._controlValueAccessorChangeFn(this.checked);\n    console.log('_onInputClick', ev.checked);\n  }\n\n  writeValue(value: any) {\n    this.checked = !!value;\n    console.log('value', this.checked);\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('changes', changes);\n    if (changes['src']) {\n      // fn\n    }\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterContentInit() {\n\n  }\n  ngOnDestroy() {\n\n  }\n\n}\n",
    "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LyCheckboxService {\n\n  constructor() { }\n\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LyCheckbox } from './ly-checkbox/ly-checkbox.component';\nimport { LyCheckboxService } from './ly-checkbox.service';\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [LyCheckbox],\n  declarations: [LyCheckbox],\n  providers: [LyCheckboxService]\n})\nexport class LyCheckboxModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LyCheckboxModule,\n    };\n  }\n}\n"
  ],
  "names": [
    "LY_CHECKBOX_CONTROL_VALUE_ACCESSOR",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "LyCheckbox",
    "multi",
    "this",
    "_currentCheckState",
    "CheckboxState",
    "Init",
    "checked",
    "change",
    "EventEmitter",
    "indeterminateChange",
    "onTouched",
    "_controlValueAccessorChangeFn",
    "value",
    "prototype",
    "toggle",
    "_onChangeEvent",
    "event",
    "stopPropagation",
    "_onInputClick",
    "ev",
    "console",
    "log",
    "writeValue",
    "registerOnChange",
    "fn",
    "ngOnChanges",
    "changes",
    "registerOnTouched",
    "ngOnInit",
    "ngAfterContentInit",
    "ngOnDestroy",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "providers",
    "id",
    "Input",
    "ariaLabel",
    "ariaLabelledby",
    "required",
    "labelPosition",
    "color",
    "name",
    "disabled",
    "indeterminate",
    "Output",
    "LyCheckboxService",
    "Injectable",
    "LyCheckboxModule",
    "forRoot",
    "ngModule",
    "NgModule",
    "imports",
    "CommonModule",
    "exports",
    "declarations"
  ],
  "mappings": "oYAAA,IAeaA,EAA0C,CACrDC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAC,IAC9BC,OAAO,0JAoCT,IAAAD,EAAA,WAmBE,SAAFA,IAlBAE,KAAAC,mBAA8CC,EAAcC,KAY5DH,KAAAI,SAA8B,EAE9BJ,KAAAK,OAAgD,IAAIC,EAAAA,aACpDN,KAAAO,oBAA8E,IAAID,EAAAA,aAClFN,KAAAQ,UAAyB,aACzBR,KAAAS,8BAAgE,SAACC,YAI/DZ,EAAFa,UAAAC,OAAE,WACEZ,KAAKI,SAAWJ,KAAKI,SAGvBN,EAAFa,UAAAE,eAAE,SAAeC,GACbA,EAAMC,mBAERjB,EAAFa,UAAAK,cAAE,SAAcF,GACZ,IAAMG,EAAKH,EAAgC,OAC3Cd,KAAKI,QAAUa,EAAGb,QAClBJ,KAAKS,8BAA8BT,KAAKI,SACxCc,QAAQC,IAAI,gBAAiBF,EAAGb,UAGlCN,EAAFa,UAAAS,WAAE,SAAWV,GACTV,KAAKI,UAAYM,EACjBQ,QAAQC,IAAI,QAASnB,KAAKI,UAG5BN,EAAFa,UAAAU,iBAAE,SAAiBC,GACftB,KAAKS,8BAAgCa,GAEvCxB,EAAFa,UAAAY,YAAE,SAAYC,GACVN,QAAQC,IAAI,UAAWK,GACnBA,EAAa,KAKnB1B,EAAFa,UAAAc,kBAAE,SAAkBH,GAChBtB,KAAKQ,UAAYc,GAGnBxB,EAAFa,UAAAe,SAAE,aAIA5B,EAAFa,UAAAgB,mBAAE,aAGA7B,EAAFa,UAAAiB,YAAE,eA9DF,iBAvBA,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,cACVC,SAAU,4hBAkBVC,OAAQ,CAAC,+BACTC,UAAW,CAAC1C,+DAId2C,GAAA,CAAA,CAAAP,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,QAETO,UAAA,CAAA,CAAAT,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,qBAETQ,eAAA,CAAA,CAAAV,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,0BACTS,SAAA,CAAA,CAAAX,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,cACTU,cAAA,CAAA,CAAAZ,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,mBACTW,MAAA,CAAA,CAAAb,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,WACTrB,MAAA,CAAA,CAAAmB,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,WACTY,KAAA,CAAA,CAAAd,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,UACTa,SAAA,CAAA,CAAAf,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,cACT3B,QAAA,CAAA,CAAAyB,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,aACTc,cAAA,CAAA,CAAAhB,KAAGQ,EAAAA,MAAHN,KAAA,CAAS,mBACT1B,OAAA,CAAA,CAAAwB,KAAGiB,EAAAA,OAAHf,KAAA,CAAU,YACVxB,oBAAA,CAAA,CAAAsB,KAAGiB,EAAAA,OAAHf,KAAA,CAAU,0BCtEV,IAAAgB,EAKE,2BAHF,CAAAlB,KAACmB,EAAAA,mDCFD,IAAAC,EAAA,WAAA,SAAAA,YAcgBA,EAAhBC,QAAS,WACL,MAAO,CACLC,SAAUF,MAhBhB,iBAKA,CAAApB,KAACuB,EAAAA,SAADrB,KAAA,CAAU,CACRsB,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAACzD,GACV0D,aAAc,CAAC1D,GACfqC,UAAW,CAACY"
}
