{
  "version": 3,
  "file": "alyle-ui-flex.umd.min.js",
  "sources": [
    "ng://@alyle/ui/flex/out/flex.service.ts",
    "ng://@alyle/ui/flex/out/flex.directive.ts",
    "ng://@alyle/ui/flex/out/flex.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { LyTheme } from '@alyle/ui';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyFlexService {\n  private fxStyle = `box-sizing:border-box;display:flex;`;\n  // classes = {\n  //   direction: {\n  //     row: this.theme.createStyle(\n  //       'fxRow',\n  //       () => (\n  //         this.fxStyle +\n  //         `flex-direction:row;`\n  //       )\n  //     ).id,\n  //   },\n  //   fxStart: this.theme.createStyle(\n  //     'fxStart',\n  //     () => (\n  //       this.fxStyle +\n  //       `justify-content:flex-start;`\n  //     )\n  //   ).id,\n  //   fxCenter: this.theme.createStyle(\n  //     'fxCenter',\n  //     () => (\n  //       this.fxStyle +\n  //       `justify-content:flex-center;`\n  //     )\n  //   ).id\n  // };\n  constructor(\n    public theme: LyTheme\n  ) { }\n}\n",
    "import { Directive, Input, OnChanges, SimpleChanges, Renderer2, ElementRef } from '@angular/core';\nimport { LyFlexService } from './flex.service';\nimport { LNodeType } from '@angular/core/src/render3/interfaces/node';\n\nexport type Direction = 'row' | 'row-reverse' | 'column' | 'column-reverse';\nexport type Wrap = 'nowrap' | 'wrap' | 'wrap-reverse';\nexport type Flow = Direction | Wrap;\nexport type JustifyContent = 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';\nexport type AlignItems = 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';\nexport type AlignContent = 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'stretch';\nexport type AlignItemsAndContent = 'flex-start' | 'center' | 'flex-end' | 'stretch';\n\nexport type FxAlign = [JustifyContent] | [JustifyContent, AlignItemsAndContent] | [JustifyContent, AlignItems, AlignContent];\n\n@Directive({\n  selector: '[fxDirection], [fxWrap], [fxAlign], [fxInline]'\n})\nexport class LyFlex implements OnChanges {\n  private _fxDirection: string;\n  private _fxWrap: string;\n  private _fxAlign: string;\n  private _currentClassname: string;\n  private _display = 'flex';\n  @Input()\n  set fxInline(val: any) {\n    this._display = 'inline-flex';\n  }\n  @Input()\n  set fxAlign(val: FxAlign) {\n    const justifyContent = val[0] || 'flex-start';\n    const alignItems = val[1] || 'stretch';\n    const alignContent = val[2];\n    this._fxAlign = (\n      `justify-content:${justifyContent};` +\n      `align-items:${alignItems};` +\n      `align-content:${alignContent || alignItems};`\n    );\n  }\n  @Input()\n  set fxDirection(val: Direction) {\n    this._fxDirection = `flex-direction:${val || 'row'};`;\n  }\n  @Input() fxWrap: Wrap;\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private fxService: LyFlexService\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let key = '';\n    let styles = ``;\n    // tslint:disable-next-line:forin\n    for (const inputKey in changes) {\n      key += inputKey + changes[inputKey].currentValue;\n      styles += this[`_${inputKey}`] || '';\n    }\n    // const inputs = Object.keys(changes);\n    // for (let index = 0; index < inputs.length; index++) {\n    //   const inputKey = inputs[index];\n    //   key += inputKey + changes[inputKey].currentValue;\n    //   styles += this[`_${inputKey}`] || '';\n    // }\n    const classname = this.fxService.theme.setStyle(\n      key,\n      () => (\n        `display:${this._display};` +\n        styles\n      ));\n    this.fxService.theme.updateClassName(this.elementRef.nativeElement, this.renderer, classname, this._currentClassname);\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\n\nimport { LyFlex } from './flex.directive';\n\n@NgModule({\n  imports: [],\n  exports: [LyFlex],\n  declarations: [LyFlex],\n  providers: [],\n})\nexport class LyFlexModule { }\n"
  ],
  "names": [
    "LyFlexService",
    "theme",
    "this",
    "fxStyle",
    "type",
    "Injectable",
    "args",
    "providedIn",
    "LyTheme",
    "LyFlex",
    "renderer",
    "elementRef",
    "fxService",
    "_display",
    "Object",
    "defineProperty",
    "prototype",
    "set",
    "val",
    "justifyContent",
    "alignItems",
    "alignContent",
    "_fxAlign",
    "_fxDirection",
    "ngOnChanges",
    "changes",
    "_this",
    "key",
    "styles",
    "inputKey",
    "currentValue",
    "classname",
    "setStyle",
    "updateClassName",
    "nativeElement",
    "_currentClassname",
    "Directive",
    "selector",
    "Renderer2",
    "ElementRef",
    "fxInline",
    "Input",
    "fxAlign",
    "fxDirection",
    "fxWrap",
    "LyFlexModule",
    "NgModule",
    "imports",
    "exports",
    "declarations",
    "providers"
  ],
  "mappings": "sTAAA,IAAAA,EAiCE,SACSC,GAAAC,KAAXD,MAAWA,EA3BXC,KAAAC,QAAoB,qDAJpB,CAAAC,KAACC,EAAAA,WAADC,KAAA,CAAY,CACVC,WAAY,8CAHd,CAAAH,KAASI,EAAAA,mICDT,IAAAC,EAAA,WA2CE,SAAFA,EACYC,EACAC,EACAC,GAFAV,KAAZQ,SAAYA,EACAR,KAAZS,WAAYA,EACAT,KAAZU,UAAYA,EAxBZV,KAAAW,SAAqB,cAErBC,OAAAC,eAAMN,EAANO,UAAA,WAAA,CAAAC,IAAA,SAAeC,GACXhB,KAAKW,SAAW,+CAGpBC,OAAAC,eAAMN,EAANO,UAAA,UAAA,CAAAC,IAAA,SAAcC,GACV,IAAMC,EAAiBD,EAAI,IAAM,aAC3BE,EAAaF,EAAI,IAAM,UACvBG,EAAeH,EAAI,GACzBhB,KAAKoB,SACH,mBAAmBH,EADzB,gBAEqBC,EAArB,mBACuBC,GAAgBD,GAAvC,qCAIAN,OAAAC,eAAMN,EAANO,UAAA,cAAA,CAAAC,IAAA,SAAkBC,GACdhB,KAAKqB,aAAe,mBAAkBL,GAAO,OAAjD,qCASET,EAAFO,UAAAQ,YAAE,SAAYC,GAAZ,IAAFC,EAAAxB,KACQyB,EAAM,GACNC,EAAS,GAEb,IAAK,IAAMC,KAAYJ,EACrBE,GAAOE,EAAWJ,EAAQI,GAAUC,aACpCF,GAAU1B,KAAK,IAAI2B,IAAe,GAQpC,IAAME,EAAY7B,KAAKU,UAAUX,MAAM+B,SACrCL,EACA,WAFN,MAGQ,WAAWD,EAAKb,SAHxB,IAIQe,IAEJ1B,KAAKU,UAAUX,MAAMgC,gBAAgB/B,KAAKS,WAAWuB,cAAehC,KAAKQ,SAAUqB,EAAW7B,KAAKiC,sBArEvG,iBAcA,CAAA/B,KAACgC,EAAAA,UAAD9B,KAAA,CAAW,CACT+B,SAAU,wFAfZ,CAAAjC,KAAqDkC,EAAAA,WAArD,CAAAlC,KAAgEmC,EAAAA,YAChE,CAAAnC,KAASJ,uBAsBTwC,SAAA,CAAA,CAAApC,KAAGqC,EAAAA,QAIHC,QAAA,CAAA,CAAAtC,KAAGqC,EAAAA,QAWHE,YAAA,CAAA,CAAAvC,KAAGqC,EAAAA,QAIHG,OAAA,CAAA,CAAAxC,KAAGqC,EAAAA,SC1CH,IAAAI,EAAA,2BAIA,CAAAzC,KAAC0C,EAAAA,SAADxC,KAAA,CAAU,CACRyC,QAAS,GACTC,QAAS,CAACvC,GACVwC,aAAc,CAACxC,GACfyC,UAAW"
}
