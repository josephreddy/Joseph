{
  "version": 3,
  "file": "alyle-ui-flex.umd.js",
  "sources": [
    "ng://@alyle/ui/flex/out/flex.module.ts",
    "ng://@alyle/ui/flex/out/flex.directive.ts",
    "ng://@alyle/ui/flex/out/flex.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\n\nimport { LyFlex } from './flex.directive';\n\n@NgModule({\n  imports: [],\n  exports: [LyFlex],\n  declarations: [LyFlex],\n  providers: [],\n})\nexport class LyFlexModule { }\n",
    "import { Directive, Input, OnChanges, SimpleChanges, Renderer2, ElementRef } from '@angular/core';\nimport { LyFlexService } from './flex.service';\nimport { LNodeType } from '@angular/core/src/render3/interfaces/node';\n\nexport type Direction = 'row' | 'row-reverse' | 'column' | 'column-reverse';\nexport type Wrap = 'nowrap' | 'wrap' | 'wrap-reverse';\nexport type Flow = Direction | Wrap;\nexport type JustifyContent = 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';\nexport type AlignItems = 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';\nexport type AlignContent = 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'stretch';\nexport type AlignItemsAndContent = 'flex-start' | 'center' | 'flex-end' | 'stretch';\n\nexport type FxAlign = [JustifyContent] | [JustifyContent, AlignItemsAndContent] | [JustifyContent, AlignItems, AlignContent];\n\n@Directive({\n  selector: '[fxDirection], [fxWrap], [fxAlign], [fxInline]'\n})\nexport class LyFlex implements OnChanges {\n  private _fxDirection: string;\n  private _fxWrap: string;\n  private _fxAlign: string;\n  private _currentClassname: string;\n  private _display = 'flex';\n  @Input()\n  set fxInline(val: any) {\n    this._display = 'inline-flex';\n  }\n  @Input()\n  set fxAlign(val: FxAlign) {\n    const justifyContent = val[0] || 'flex-start';\n    const alignItems = val[1] || 'stretch';\n    const alignContent = val[2];\n    this._fxAlign = (\n      `justify-content:${justifyContent};` +\n      `align-items:${alignItems};` +\n      `align-content:${alignContent || alignItems};`\n    );\n  }\n  @Input()\n  set fxDirection(val: Direction) {\n    this._fxDirection = `flex-direction:${val || 'row'};`;\n  }\n  @Input() fxWrap: Wrap;\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private fxService: LyFlexService\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let key = '';\n    let styles = ``;\n    // tslint:disable-next-line:forin\n    for (const inputKey in changes) {\n      key += inputKey + changes[inputKey].currentValue;\n      styles += this[`_${inputKey}`] || '';\n    }\n    // const inputs = Object.keys(changes);\n    // for (let index = 0; index < inputs.length; index++) {\n    //   const inputKey = inputs[index];\n    //   key += inputKey + changes[inputKey].currentValue;\n    //   styles += this[`_${inputKey}`] || '';\n    // }\n    const classname = this.fxService.theme.setStyle(\n      key,\n      () => (\n        `display:${this._display};` +\n        styles\n      ));\n    this.fxService.theme.updateClassName(this.elementRef.nativeElement, this.renderer, classname, this._currentClassname);\n  }\n\n}\n",
    "import { Injectable } from '@angular/core';\nimport { LyTheme } from '@alyle/ui';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyFlexService {\n  private fxStyle = `box-sizing:border-box;display:flex;`;\n  // classes = {\n  //   direction: {\n  //     row: this.theme.createStyle(\n  //       'fxRow',\n  //       () => (\n  //         this.fxStyle +\n  //         `flex-direction:row;`\n  //       )\n  //     ).id,\n  //   },\n  //   fxStart: this.theme.createStyle(\n  //     'fxStart',\n  //     () => (\n  //       this.fxStyle +\n  //       `justify-content:flex-start;`\n  //     )\n  //   ).id,\n  //   fxCenter: this.theme.createStyle(\n  //     'fxCenter',\n  //     () => (\n  //       this.fxStyle +\n  //       `justify-content:flex-center;`\n  //     )\n  //   ).id\n  // };\n  constructor(\n    public theme: LyTheme\n  ) { }\n}\n"
  ],
  "names": [
    "NgModule",
    "Input",
    "ElementRef",
    "Renderer2",
    "Directive",
    "LyTheme",
    "Injectable"
  ],
  "mappings": "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"
}
