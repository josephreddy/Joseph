{
  "version": 3,
  "file": "alyle-ui-icon.umd.min.js",
  "sources": [
    "ng://@alyle/ui/icon/out/icon.service.ts",
    "ng://@alyle/ui/icon/out/icon.ts",
    "ng://@alyle/ui/icon/out/icon.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable, Optional, Inject, SecurityContext } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable, of } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\nimport { LyTheme, ProvidedInTheme } from '@alyle/ui';\n\nexport interface SvgIcon {\n  obs: Observable<SVGElement>;\n  loaded?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyIconService {\n  private svgMap = new Map<string, SvgIcon>();\n\n  constructor(\n    private http: HttpClient,\n    @Optional() @Inject(DOCUMENT) private document: any\n  ) { }\n\n  setSvg(key: string, url: string) {\n    if (!this.svgMap.has(key)) {\n      url = `${url}.svg`;\n      this.svgMap.set(key,\n        {\n          obs: this.http.get(url, { responseType: 'text' })\n          .pipe(\n            share(),\n            map(svgText => this.textToSvg(svgText)),\n          )\n        }\n      );\n    }\n  }\n\n  textToSvg(str: string): SVGElement {\n    const div = this.document.createElement('DIV');\n    div.innerHTML = str;\n    const svg = div.querySelector('svg') as SVGElement;\n    return svg;\n  }\n\n  getSvg(key: string): SvgIcon {\n    return this.svgMap.get(key);\n  }\n}\n\n@Injectable(ProvidedInTheme)\nexport class LyIconStyle {\n  classes = {\n    root: this.theme.setStyle(\n      'root',\n      () => (\n        `font-size:${this.theme.palette.icon.fontSize};` +\n        `width:1em;` +\n        `height:1em;` +\n        `display:inline-flex;`\n      )\n    ),\n    svg: this.theme.setRootStyle(\n      '_svg',\n      () => (\n        `width:inherit;` +\n        `height:inherit;` +\n        `fill:currentColor;`\n      )\n    )\n  };\n\n  constructor(private theme: LyTheme) { }\n}\n",
    "import { Directive, Input, Renderer2, ElementRef, OnChanges, SimpleChanges, OnInit } from '@angular/core';\nimport { LyIconService, LyIconStyle, SvgIcon } from './icon.service';\nimport { take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Platform } from '@alyle/ui';\n\n@Directive({\n  selector: 'ly-icon'\n})\nexport class Icon implements OnChanges, OnInit {\n  private _defaultClass = 'material-icons';\n  private _src: string;\n  private _icon: string;\n  @Input()\n  set src(val: string) {\n    this._src = val;\n    if (Platform.isBrowser) {\n      if (val) {\n        const key = `_url:${val}`;\n        this.iconService.setSvg(key, val);\n        this._prepareSvgIcon(this.iconService.getSvg(key));\n      }\n    } else {\n      this._appendDefaultSvgIcon();\n    }\n  }\n  get src() {\n    return this._src;\n  }\n\n  @Input() set icon(val: string) {\n    this._icon = val;\n    if (Platform.isBrowser) {\n      this._prepareSvgIcon(this.iconService.getSvg(val));\n    } else {\n      this._appendDefaultSvgIcon();\n    }\n  }\n  get icon() {\n    return this._icon;\n  }\n\n  constructor(\n    private iconService: LyIconService,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private iconStyle: LyIconStyle\n  ) {\n    renderer.addClass(elementRef.nativeElement, this.iconStyle.classes.root);\n  }\n\n  private _isDefault() {\n    return !(this.src || this.icon);\n  }\n\n  private _prepareSvgIcon(svgIcon: SvgIcon) {\n    svgIcon.obs\n      .pipe(\n        take(1)\n      )\n      .subscribe((svgElement) => {\n        this._cleanIcon();\n        this._appendChild(svgElement);\n      });\n  }\n\n  private _appendChild(svg: SVGElement) {\n    svg.classList.add(this.iconStyle.classes.svg);\n    this.renderer.appendChild(this.elementRef.nativeElement, svg);\n  }\n\n  private _appendDefaultSvgIcon() {\n    this._appendChild(this.iconService.textToSvg('<svg viewBox=\"0 0 20 20\"><circle cx=\"10\" cy=\"10\" r=\"10\"></circle></svg>'));\n  }\n\n  private _updateClass() {\n    if (this._isDefault()) {\n      this.renderer.addClass(this.elementRef.nativeElement, this._defaultClass);\n    }\n  }\n\n  ngOnInit() { this._updateClass(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._updateClass();\n  }\n\n  /**\n   * run only browser\n   * remove current icon\n   */\n  private _cleanIcon() {\n    const icon = this.elementRef.nativeElement.querySelector('svg');\n    if (icon) {\n      this.renderer.removeChild(this.elementRef, icon);\n    }\n  }\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Icon } from './icon';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [Icon],\n  exports: [Icon]\n})\nexport class LyIconModule { }\n"
  ],
  "names": [
    "LyIconService",
    "http",
    "document",
    "this",
    "svgMap",
    "Map",
    "prototype",
    "setSvg",
    "key",
    "url",
    "_this",
    "has",
    "set",
    "obs",
    "get",
    "responseType",
    "pipe",
    "share",
    "map",
    "svgText",
    "textToSvg",
    "str",
    "div",
    "createElement",
    "innerHTML",
    "querySelector",
    "getSvg",
    "type",
    "Injectable",
    "args",
    "providedIn",
    "HttpClient",
    "undefined",
    "decorators",
    "Optional",
    "Inject",
    "DOCUMENT",
    "LyIconStyle",
    "theme",
    "classes",
    "root",
    "setStyle",
    "palette",
    "fontSize",
    "svg",
    "setRootStyle",
    "ProvidedInTheme",
    "LyTheme",
    "Icon",
    "iconService",
    "elementRef",
    "renderer",
    "iconStyle",
    "_defaultClass",
    "addClass",
    "nativeElement",
    "Object",
    "defineProperty",
    "_src",
    "val",
    "Platform",
    "isBrowser",
    "_prepareSvgIcon",
    "_appendDefaultSvgIcon",
    "_icon",
    "_isDefault",
    "src",
    "icon",
    "svgIcon",
    "take",
    "subscribe",
    "svgElement",
    "_cleanIcon",
    "_appendChild",
    "classList",
    "add",
    "appendChild",
    "_updateClass",
    "ngOnInit",
    "ngOnChanges",
    "changes",
    "removeChild",
    "Directive",
    "selector",
    "ElementRef",
    "Renderer2",
    "Input",
    "LyIconModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
