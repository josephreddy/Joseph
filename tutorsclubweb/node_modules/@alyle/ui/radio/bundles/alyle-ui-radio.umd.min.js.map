{
  "version": 3,
  "file": "alyle-ui-radio.umd.min.js",
  "sources": [
    "ng://@alyle/ui/radio/out/radio.ts"
  ],
  "sourcesContent": [
    "import {\n  Component,\n  forwardRef,\n  NgModule,\n  Input,\n  Directive,\n  Output,\n  SimpleChange,\n  ChangeDetectorRef,\n  OnChanges,\n  ModuleWithProviders,\n  AfterContentInit,\n  AfterViewInit,\n  OnInit,\n  OnDestroy,\n  ContentChildren,\n  QueryList,\n  Optional,\n  HostBinding,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  NgZone,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport { LyRippleModule, LyRipple, LyRippleService, Ripple } from '@alyle/ui/ripple';\nimport { Subscription , Subject , BehaviorSubject , Observable } from 'rxjs';\nimport {\n  NgModel,\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n  FormsModule,\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { LyTheme, LyCommonModule, Platform, IsBoolean } from '@alyle/ui';\nexport const LY_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => LyRadioGroup),\n  multi: true\n};\nlet idx = 0;\n@Component({\n  selector: 'ly-radio-group',\n  styles: [`\n    :host {\n      display: inline-flex;\n    }\n  `],\n  template: `<ng-content></ng-content>`,\n  providers: [LY_RADIO_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\nexport class LyRadioGroup implements AfterContentInit, AfterViewInit, ControlValueAccessor {\n  _value = null;\n  name = `ly-radio-name-${idx++}`;\n  _color = 'accent';\n\n  @Input() value = null;\n  @Input() radioColor = 'accent';\n  @ContentChildren(forwardRef(() => LyRadio)) _radios: QueryList<LyRadio>;\n\n  private changed = new Array<(value: any) => void>();\n  private touched = new Array<() => void>();\n\n  touch() {\n    this.touched.forEach(f => f());\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this.changed.push(fn);\n  }\n\n  registerOnTouched(fn: () => void) {\n    this.touched.push(fn);\n  }\n\n\n  constructor(\n    private elementRef: ElementRef,\n    public theme: LyTheme,\n    public ngZone: NgZone,\n    private cd: ChangeDetectorRef\n  ) {\n  }\n\n  writeValue(value: any) {\n    this._value = value;\n  }\n\n  ngAfterContentInit() {\n\n  }\n  updatevalue(value: any) {\n    this._value = value;\n    this.changed.forEach(f => f(value));\n  }\n\n  markForCheck() {\n    this.cd.markForCheck();\n  }\n\n  ngAfterViewInit() {\n    /**set value null if all checked === false */\n    Promise.resolve(null).then(() => {\n      const stateChecked = this._radios.find((radio: LyRadio, index) => radio.checked);\n        if (!stateChecked) {\n          this.updatevalue(null);\n          this.markForCheck();\n        }\n    });\n  }\n\n}\n@Component({\n  selector: 'ly-radio',\n  styles: [`:host{display:inline-block}.ly-radio-input{pointer-events:none;opacity:0;background:0 0;position:absolute;width:0;height:0}.ly-radio-label{cursor:pointer;white-space:nowrap;position:relative;display:inline-block}.ly-radio-container{-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;position:relative;vertical-align:middle;height:calc(1em * 3)}.ly-radio-container .ly-radio-icon-container{width:1.5em;height:1.5em}.ly-radio-input:checked~.ly-radio-container .ly-radio-inner-circle{-webkit-transform:scale(.6);transform:scale(.6)}.ly-radio-input:checked~.ly-radio-container .ly-radio-outer-circle{border:.1em solid currentColor;color:currentColor!important}.ly-radio-container .ly-radio-inner-circle,.ly-radio-container .ly-radio-outer-circle{-webkit-transition:all 275ms cubic-bezier(.4,0,.2,1) 0s;transition:all 275ms cubic-bezier(.4,0,.2,1) 0s;position:absolute;border-radius:100%;-webkit-box-sizing:border-box;box-sizing:border-box;width:1.25em;height:1.25em;top:0;left:0;right:0;bottom:0;margin:auto}.ly-radio-container .ly-radio-outer-circle{border:1px solid currentColor}.ly-radio-container .ly-radio-inner-circle{background:currentColor;-webkit-transform:scale(0);transform:scale(0)}.ly-radio-label-content{display:inline-block;padding:0 .5em}`],\n  template: `\n  <label #_labelContainer [attr.for]=\"inputId\" class=\"ly-radio-label\">\n    <input\n      class=\"ly-radio-input\"\n      [class.ly-radio-checked]=\"checked\"\n      [id]=\"inputId\"\n      [checked]=\"checked\"\n      [name]=\"name\"\n      (change)=\"_onInputChange($event)\"\n      type=\"radio\"\n      >\n    <div #_radioContainer [color]=\"radioGroup.radioColor\" class=\"ly-radio-container\">\n      <div class=\"ly-radio-icon-container\">\n      <div class=\"ly-radio-outer-circle\" color=\"radio:radioOuterCircle\"></div>\n      <div class=\"ly-radio-inner-circle\"></div>\n      </div>\n    </div>\n    <div\n    class=\"ly-radio-label-content\">\n      <ng-content></ng-content>\n    </div>\n  </label>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\nexport class LyRadio implements OnInit, OnChanges, OnDestroy {\n  id = `ly-radio-id-${idx++}`;\n  name = '';\n  _value = null;\n  private _rippleContainer: Ripple;\n  private _checked = false;\n  @ViewChild('_radioContainer') private _radioContainer: ElementRef;\n  @ViewChild('_labelContainer') _labelContainer: ElementRef;\n  @Output() onCheckedState = new EventEmitter<boolean>();\n  @HostBinding('class.ly-radio-checked') @Input() @IsBoolean() checked: boolean;\n  get inputId(): string {\n    return `${this.id}-input`;\n  }\n\n  @Input() value: any;\n\n  _onInputChange(event: any) {\n    this.radioGroup.updatevalue(this.value);\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['checked']) {\n      if (this.checked) {\n        Promise.resolve(null).then(() => {\n          this.radioGroup.updatevalue(this.value);\n        });\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (this.radioGroup) {\n      // Copy name from parent radio group\n      this.name = this.radioGroup.name;\n    }\n    this._rippleContainer = new Ripple(this.ngZone, this._rippleService.stylesData, this._radioContainer.nativeElement, this._elementRef.nativeElement);\n    this._rippleContainer.setConfig({\n      centered: true,\n      radius: 'containerSize'\n    });\n  }\n  _markForCheck() {\n    this.changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy() {\n    this._rippleContainer.removeEvents();\n  }\n\n\n  constructor(\n    @Optional() public radioGroup: LyRadioGroup,\n    private _elementRef: ElementRef,\n    public theme: LyTheme,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private _rippleService: LyRippleService\n  ) { }\n}\n\n@NgModule({\n  imports: [CommonModule, FormsModule, LyRippleModule, LyCommonModule],\n  exports: [LyRadioGroup, LyRadio],\n  declarations: [LyRadioGroup, LyRadio],\n})\nexport class LyRadioModule { }\n"
  ],
  "names": [
    "LY_RADIO_CONTROL_VALUE_ACCESSOR",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "LyRadioGroup",
    "multi",
    "idx",
    "elementRef",
    "theme",
    "ngZone",
    "cd",
    "this",
    "_value",
    "name",
    "_color",
    "value",
    "radioColor",
    "changed",
    "Array",
    "touched",
    "prototype",
    "touch",
    "forEach",
    "f",
    "registerOnChange",
    "fn",
    "push",
    "registerOnTouched",
    "writeValue",
    "ngAfterContentInit",
    "updatevalue",
    "markForCheck",
    "ngAfterViewInit",
    "_this",
    "Promise",
    "resolve",
    "then",
    "_radios",
    "find",
    "radio",
    "index",
    "checked",
    "type",
    "Component",
    "args",
    "selector",
    "styles",
    "template",
    "providers",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "preserveWhitespaces",
    "ElementRef",
    "LyTheme",
    "NgZone",
    "ChangeDetectorRef",
    "Input",
    "ContentChildren",
    "LyRadio",
    "radioGroup",
    "_elementRef",
    "changeDetectorRef",
    "_rippleService",
    "id",
    "_checked",
    "onCheckedState",
    "EventEmitter",
    "Object",
    "defineProperty",
    "get",
    "_onInputChange",
    "event",
    "ngOnChanges",
    "changes",
    "ngOnInit",
    "_rippleContainer",
    "Ripple",
    "stylesData",
    "_radioContainer",
    "nativeElement",
    "setConfig",
    "centered",
    "radius",
    "_markForCheck",
    "ngOnDestroy",
    "removeEvents",
    "decorators",
    "Optional",
    "LyRippleService",
    "ViewChild",
    "_labelContainer",
    "Output",
    "HostBinding",
    "IsBoolean",
    "LyRadioModule",
    "NgModule",
    "imports",
    "CommonModule",
    "FormsModule",
    "LyRippleModule",
    "LyCommonModule",
    "exports",
    "declarations"
  ],
  "mappings": "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"
}
