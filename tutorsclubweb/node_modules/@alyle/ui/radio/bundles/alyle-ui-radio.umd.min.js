!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@alyle/ui/ripple"),require("@angular/forms"),require("@angular/common"),require("@alyle/ui")):"function"==typeof define&&define.amd?define("ly.radio",["exports","@angular/core","@alyle/ui/ripple","@angular/forms","@angular/common","@alyle/ui"],t):t((e.ly=e.ly||{},e.ly.radio={}),e.ng.core,e.ly.ripple,e.ng.forms,e.ng.common,e.ly.core)}(this,function(e,a,t,n,o,r){"use strict";var i=this&&this.__decorate||function(e,t,n,o){var r,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var l=e.length-1;0<=l;l--)(r=e[l])&&(a=(i<3?r(a):3<i?r(t,n,a):r(t,n))||a);return 3<i&&a&&Object.defineProperty(t,n,a),a},l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},c={provide:n.NG_VALUE_ACCESSOR,useExisting:a.forwardRef(function(){return d}),multi:!0},s=0,d=function(){function e(e,t,n,o){this.elementRef=e,this.theme=t,this.ngZone=n,this.cd=o,this._value=null,this.name="ly-radio-name-"+s++,this._color="accent",this.value=null,this.radioColor="accent",this.changed=new Array,this.touched=new Array}return e.prototype.touch=function(){this.touched.forEach(function(e){return e()})},e.prototype.registerOnChange=function(e){this.changed.push(e)},e.prototype.registerOnTouched=function(e){this.touched.push(e)},e.prototype.writeValue=function(e){this._value=e},e.prototype.ngAfterContentInit=function(){},e.prototype.updatevalue=function(t){this._value=t,this.changed.forEach(function(e){return e(t)})},e.prototype.markForCheck=function(){this.cd.markForCheck()},e.prototype.ngAfterViewInit=function(){var e=this;Promise.resolve(null).then(function(){e._radios.find(function(e,t){return e.checked})||(e.updatevalue(null),e.markForCheck())})},e}();d.decorators=[{type:a.Component,args:[{selector:"ly-radio-group",styles:["\n    :host {\n      display: inline-flex;\n    }\n  "],template:"<ng-content></ng-content>",providers:[c],changeDetection:a.ChangeDetectionStrategy.OnPush,preserveWhitespaces:!1}]}],d.ctorParameters=function(){return[{type:a.ElementRef},{type:r.LyTheme},{type:a.NgZone},{type:a.ChangeDetectorRef}]},d.propDecorators={value:[{type:a.Input}],radioColor:[{type:a.Input}],_radios:[{type:a.ContentChildren,args:[a.forwardRef(function(){return p})]}]};var p=function(){function e(e,t,n,o,r,i){this.radioGroup=e,this._elementRef=t,this.theme=n,this.changeDetectorRef=o,this.ngZone=r,this._rippleService=i,this.id="ly-radio-id-"+s++,this.name="",this._value=null,this._checked=!1,this.onCheckedState=new a.EventEmitter}return Object.defineProperty(e.prototype,"inputId",{get:function(){return this.id+"-input"},enumerable:!0,configurable:!0}),e.prototype._onInputChange=function(e){this.radioGroup.updatevalue(this.value)},e.prototype.ngOnChanges=function(e){var t=this;e.checked&&this.checked&&Promise.resolve(null).then(function(){t.radioGroup.updatevalue(t.value)})},e.prototype.ngOnInit=function(){this.radioGroup&&(this.name=this.radioGroup.name),this._rippleContainer=new t.Ripple(this.ngZone,this._rippleService.stylesData,this._radioContainer.nativeElement,this._elementRef.nativeElement),this._rippleContainer.setConfig({centered:!0,radius:"containerSize"})},e.prototype._markForCheck=function(){this.changeDetectorRef.markForCheck()},e.prototype.ngOnDestroy=function(){this._rippleContainer.removeEvents()},e}();p.decorators=[{type:a.Component,args:[{selector:"ly-radio",styles:[":host{display:inline-block}.ly-radio-input{pointer-events:none;opacity:0;background:0 0;position:absolute;width:0;height:0}.ly-radio-label{cursor:pointer;white-space:nowrap;position:relative;display:inline-block}.ly-radio-container{-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;position:relative;vertical-align:middle;height:calc(1em * 3)}.ly-radio-container .ly-radio-icon-container{width:1.5em;height:1.5em}.ly-radio-input:checked~.ly-radio-container .ly-radio-inner-circle{-webkit-transform:scale(.6);transform:scale(.6)}.ly-radio-input:checked~.ly-radio-container .ly-radio-outer-circle{border:.1em solid currentColor;color:currentColor!important}.ly-radio-container .ly-radio-inner-circle,.ly-radio-container .ly-radio-outer-circle{-webkit-transition:all 275ms cubic-bezier(.4,0,.2,1) 0s;transition:all 275ms cubic-bezier(.4,0,.2,1) 0s;position:absolute;border-radius:100%;-webkit-box-sizing:border-box;box-sizing:border-box;width:1.25em;height:1.25em;top:0;left:0;right:0;bottom:0;margin:auto}.ly-radio-container .ly-radio-outer-circle{border:1px solid currentColor}.ly-radio-container .ly-radio-inner-circle{background:currentColor;-webkit-transform:scale(0);transform:scale(0)}.ly-radio-label-content{display:inline-block;padding:0 .5em}"],template:'\n  <label #_labelContainer [attr.for]="inputId" class="ly-radio-label">\n    <input\n      class="ly-radio-input"\n      [class.ly-radio-checked]="checked"\n      [id]="inputId"\n      [checked]="checked"\n      [name]="name"\n      (change)="_onInputChange($event)"\n      type="radio"\n      >\n    <div #_radioContainer [color]="radioGroup.radioColor" class="ly-radio-container">\n      <div class="ly-radio-icon-container">\n      <div class="ly-radio-outer-circle" color="radio:radioOuterCircle"></div>\n      <div class="ly-radio-inner-circle"></div>\n      </div>\n    </div>\n    <div\n    class="ly-radio-label-content">\n      <ng-content></ng-content>\n    </div>\n  </label>\n  ',changeDetection:a.ChangeDetectionStrategy.OnPush,preserveWhitespaces:!1}]}],p.ctorParameters=function(){return[{type:d,decorators:[{type:a.Optional}]},{type:a.ElementRef},{type:r.LyTheme},{type:a.ChangeDetectorRef},{type:a.NgZone},{type:t.LyRippleService}]},p.propDecorators={_radioContainer:[{type:a.ViewChild,args:["_radioContainer"]}],_labelContainer:[{type:a.ViewChild,args:["_labelContainer"]}],onCheckedState:[{type:a.Output}],checked:[{type:a.HostBinding,args:["class.ly-radio-checked"]},{type:a.Input}],value:[{type:a.Input}]},i([r.IsBoolean(),l("design:type",Boolean)],p.prototype,"checked",void 0);var u=function(){};u.decorators=[{type:a.NgModule,args:[{imports:[o.CommonModule,n.FormsModule,t.LyRippleModule,r.LyCommonModule],exports:[d,p],declarations:[d,p]}]}],e.LY_RADIO_CONTROL_VALUE_ACCESSOR=c,e.LyRadioGroup=d,e.LyRadio=p,e.LyRadioModule=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=alyle-ui-radio.umd.min.js.map
