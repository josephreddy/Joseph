{
  "version": 3,
  "file": "alyle-ui-drawer.umd.min.js",
  "sources": [
    "ng://@alyle/ui/drawer/out/drawer.ts",
    "ng://@alyle/ui/drawer/out/drawer.module.ts"
  ],
  "sourcesContent": [
    "import {\n  NgModule,\n  Component,\n  Directive,\n  ViewEncapsulation,\n  EventEmitter,\n  ElementRef,\n  Renderer,\n  ModuleWithProviders,\n  Input,\n  AfterContentInit,\n  ContentChildren,\n  ContentChild,\n  QueryList,\n  ChangeDetectionStrategy,\n  Output,\n  ViewChild,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentRef,\n  forwardRef,\n  OnInit,\n  HostBinding,\n  Optional,\n  Renderer2,\n  AfterViewInit,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n  HostListener\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { RandomId, NgTranscludeModule, IsBoolean } from '@alyle/ui';\nimport { AnimationBuilder, trigger, state, animate, transition, style } from '@angular/animations';\nimport { BehaviorSubject } from 'rxjs';\nexport interface StyleMargin {\n  top?: string;\n  left?: string;\n  right?: string;\n  bottom?: string;\n}\n\n@Directive({\n  selector: 'ly-drawer-content'\n})\nexport class LyDrawerContent {\n  @HostBinding('style.margin') margin = '0 0 0 0';\n  _el: HTMLElement;\n  @HostBinding('class.ly--animation') _lyAnimation = true;\n  constructor(\n    public elementRef: ElementRef,\n    public renderer: Renderer2,\n  ) {\n    this._el = elementRef.nativeElement;\n  }\n\n  setContentStyle(margin: StyleMargin) {\n    const array = this.margin.split(' ');\n    if (margin.left) {\n      array[3] = `${margin.left}px`;\n    }\n    if (margin.right) {\n      array[1] = `${margin.right}px`;\n    }\n    if (margin.top) {\n      array[0] = `${margin.top}px`;\n    }\n    if (margin.bottom) {\n      array[2] = `${margin.bottom}px`;\n    }\n    this.margin = array.join(' ');\n    // const keys = Object.keys(margin);\n    // for (let i = 0; i < keys.length; i++) {\n    //   const keyName = keys[i];\n    //   this.renderer.setStyle(this._drawerContent.elementRef.nativeElement, `margin-${keyName}`, `${margin[keyName]}px`);\n    // }\n  }\n}\n\n@Component({\n  selector: 'ly-drawer-container',\n  styles: [`:host{display:block;overflow:hidden;-webkit-overflow-scrolling:touch;-webkit-box-sizing:border-box;box-sizing:border-box;position:relative}:host ::ng-deep>ly-drawer-content{height:100%;overflow:auto;display:block}:host ::ng-deep>ly-drawer-content.ly--animation{-webkit-transition:375ms cubic-bezier(.45,0,.25,1);transition:375ms cubic-bezier(.45,0,.25,1)}.ly-drawer-bg{position:absolute;top:0;left:0;right:0;bottom:0;opacity:.6;z-index:10;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ly-drawer-bg-opened{display:block}.ly-drawer-bg-closed{display:none}`],\n  animations: [\n    trigger('in', [\n      state('inactive, 0' , style({ opacity: '0', 'display': 'none' })),\n      state('active, 1' , style({ opacity: '.6' })),\n      transition('* => active', animate('375ms ease-in')),\n      transition('* => inactive', animate('375ms ease-out')),\n    ])\n  ],\n  template: `\n  <ng-content select=\"ly-drawer\"></ng-content>\n  <ng-content select=\"ly-drawer-content\"></ng-content>\n  <div\n  #bg\n  [class.ly-drawer-bg-opened]=\"isDrawerBg | async\"\n  [class.ly-drawer-bg-closed]=\"!(isDrawerBg | async)\"\n  [@in]=\"isDrawerBg | async\" class=\"ly-drawer-bg\"\n  bg=\"drawer:backdrop\"\n  (click)=\"_closeAllSideAndPush()\"\n  ></div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  exportAs: 'lyDrawerContainer'\n})\nexport class LyDrawerContainer {\n  isDrawerBg = new BehaviorSubject<'active' | 'inactive' | boolean>(false);\n  @ContentChildren(forwardRef(() => LyDrawer)) _drawers: QueryList<LyDrawer>;\n  @ContentChild(forwardRef(() => LyDrawerContent)) _drawerContent: LyDrawerContent;\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private animationBuilder: AnimationBuilder\n  ) {}\n\n  _closeAllSideAndPush() {\n    this._drawers.forEach((drawer: LyDrawer) => {\n      if (drawer.mode === 'over' || drawer.mode === 'push') {\n        drawer.close();\n        this.isDrawerBg.next('inactive');\n      }\n    });\n  }\n\n  /** Close all open drawers */\n  closeAll() {\n    this._drawers.forEach((drawer: LyDrawer) => {\n      if (drawer.open) {\n        drawer.close();\n      }\n    });\n    this.isDrawerBg.next('inactive');\n  }\n}\n\n@Component({\n  selector: 'ly-nav, ly-drawer',\n  styles: [`:host{display:block;position:fixed;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:auto;z-index:11}:host[position=top]{top:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}:host[position=left]{left:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}:host[position=right],:host[position=rtl]{right:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}:host[position=bottom]{bottom:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}:host.ly-show-drawer{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}:host.ly-drawer-hidden{visibility:hidden}`],\n  animations: [\n    trigger('visibilityChanged', [\n      state('true, open' , style({ transform: 'translate3d(0, 0, 0)' })),\n      transition('* => open, * => close', [\n        animate('375ms cubic-bezier(.45, 0, .25, 1)')\n      ])\n    ])\n  ],\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  exportAs: 'lyDrawer'\n})\nexport class LyDrawer implements OnChanges {\n  private _opened = false;\n  @Input() config: LyDrawerConfig = {\n    width: 200,\n    height: 200\n  };\n  @HostBinding('attr.mode') @Input() mode: 'side' | 'push' | 'over' = 'side';\n  @HostBinding('attr.position') @Input() position: 'top' | 'bottom' | 'left' | 'right' | 'rtl' = 'left';\n  @HostBinding('class.ly-show-drawer') isShowDrawer: boolean;\n  @HostBinding('@visibilityChanged')\n  isOpenDrawer: 'open' | 'close' | boolean = false;\n  @HostBinding('class.ly-drawer-hidden') private isDrawerHidden = true;\n  @Input()\n  @IsBoolean()\n  set opened(val: boolean) {\n    this.isOpenDrawer = val;\n    this._opened = val;\n    val ? this.open(true) : this.close(false);\n  }\n  get opened(): boolean { return this._opened; }\n\n  constructor(\n    @Optional() private drawerContainer: LyDrawerContainer,\n    private elementRef: ElementRef,\n  ) { }\n\n  get _elementRect(): ClientRect {\n    return this.elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  private updateDrawerMargin() {\n    if (this.mode === 'side' || this.mode === 'push') {\n      const width = this.config.width;\n      const height = this.config.height;\n      if (width !== 0 && this.position === 'left' || this.position === 'right') {\n        const margin = {};\n        margin[this.position] = width;\n        this.drawerContainer._drawerContent.setContentStyle(margin);\n      }\n      if (height !== 0 && this.position === 'top' || this.position === 'bottom') {\n        const margin = {};\n        margin[this.position] = height;\n        this.drawerContainer._drawerContent.setContentStyle(margin);\n      }\n    }\n  }\n\n  toBoolean(drawerState: boolean | 'open' | 'close'): boolean {\n    if (drawerState === true || drawerState === 'open') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggle() {\n    this.toBoolean(this.isOpenDrawer) ? this.close() : this.open();\n  }\n\n  open(is?: true): 'open' | boolean {\n    this.toogleDrawer(is);\n    this.isDrawerHidden = false;\n    this.isOpenDrawer = is || 'open';\n    this.drawerContainer._drawerContent._lyAnimation = this.isOpenDrawer === 'open';\n    this.updateDrawerMargin();\n    this.setBgState(is || 'active');\n    return this.isOpenDrawer;\n  }\n  close(is?: false): 'close' | boolean {\n    this.toogleDrawer(is);\n    this.resetMargin();\n    this.isOpenDrawer = is === false || is === true ? false : 'close';\n    this.drawerContainer._drawerContent._lyAnimation = this.isOpenDrawer === 'close';\n    this.setBgState(is === false ? false : 'inactive');\n    return this.isOpenDrawer;\n  }\n\n  private toogleDrawer(status: boolean) {\n    this.isShowDrawer = this.toBoolean(status);\n  }\n\n  setBgState(bgState: boolean | 'active' | 'inactive') {\n    if (this.mode === 'over' || this.mode === 'push') {\n      this.drawerContainer.isDrawerBg.next(bgState);\n    }\n  }\n\n  resetMargin() {\n    const margin = {};\n    margin[this.position] = '0';\n    this.drawerContainer._drawerContent.setContentStyle(margin);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach((key) => {\n      /**for `position` changes */\n      if (key === 'position' && changes[key].currentValue === 'rtl') {\n        this.position = 'right';\n      }\n\n      /** Update mode */\n      if (changes['mode'] && !changes[key].firstChange) {\n        this.toBoolean(this.isOpenDrawer) ? this.open(true) : this.close(false);\n      }\n    });\n  }\n\n}\n\nexport interface LyDrawerConfig {\n  width?: number;\n  height?: number;\n}\n",
    "import { NgModule, ModuleWithProviders, ViewContainerRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyDrawer, LyDrawerContainer, LyDrawerContent } from './drawer';\nimport { LyCommonModule } from '@alyle/ui';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LyCommonModule\n  ],\n  exports: [LyDrawer, LyDrawerContainer, LyDrawerContent],\n  declarations: [LyDrawer, LyDrawerContainer, LyDrawerContent],\n})\nexport class LyDrawerModule {}\n"
  ],
  "names": [
    "LyDrawerContent",
    "elementRef",
    "renderer",
    "this",
    "margin",
    "_lyAnimation",
    "_el",
    "nativeElement",
    "prototype",
    "setContentStyle",
    "array",
    "split",
    "left",
    "right",
    "top",
    "bottom",
    "join",
    "type",
    "Directive",
    "args",
    "selector",
    "ElementRef",
    "Renderer2",
    "HostBinding",
    "LyDrawerContainer",
    "animationBuilder",
    "isDrawerBg",
    "BehaviorSubject",
    "_closeAllSideAndPush",
    "_this",
    "_drawers",
    "forEach",
    "drawer",
    "mode",
    "close",
    "next",
    "closeAll",
    "open",
    "Component",
    "styles",
    "animations",
    "trigger",
    "state",
    "style",
    "opacity",
    "display",
    "transition",
    "animate",
    "template",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "preserveWhitespaces",
    "exportAs",
    "AnimationBuilder",
    "ContentChildren",
    "forwardRef",
    "LyDrawer",
    "_drawerContent",
    "ContentChild",
    "drawerContainer",
    "_opened",
    "config",
    "width",
    "height",
    "position",
    "isOpenDrawer",
    "isDrawerHidden",
    "Object",
    "defineProperty",
    "get",
    "set",
    "val",
    "getBoundingClientRect",
    "updateDrawerMargin",
    "toBoolean",
    "drawerState",
    "toggle",
    "is",
    "toogleDrawer",
    "setBgState",
    "resetMargin",
    "status",
    "isShowDrawer",
    "bgState",
    "ngOnChanges",
    "changes",
    "keys",
    "key",
    "currentValue",
    "firstChange",
    "transform",
    "decorators",
    "Optional",
    "Input",
    "opened",
    "IsBoolean",
    "LyDrawerModule",
    "NgModule",
    "imports",
    "CommonModule",
    "LyCommonModule",
    "exports",
    "declarations"
  ],
  "mappings": "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"
}
