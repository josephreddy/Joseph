import { LyTheme, ProvidedInTheme, LyBgColorAndRaised, AlyleUIModule } from '@alyle/ui';
import { Injectable, NgModule, Component, ElementRef, ViewChild, Optional, Renderer2, ChangeDetectionStrategy, defineInjectable, inject } from '@angular/core';
import { LyRipple, LyRippleModule } from '@alyle/ui/ripple';
import { CommonModule } from '@angular/common';

var LyIconButtonService = /** @class */ (function () {
    function LyIconButtonService(theme) {
        var _this = this;
        this.theme = theme;
        this.classes = {
            host: this.theme.setStyle('icnBtn', function () {
                var style = "-webkit-user-select:none;" +
                    "-moz-user-select:none;" +
                    "-ms-user-select:none;" +
                    "user-select:none;" +
                    "-webkit-tap-highlight-color:rgba(0, 0, 0, 0);" +
                    "justify-content: center;" +
                    "align-items: center;" +
                    "background:transparent;" +
                    "border:0;" +
                    "padding:0;" +
                    "overflow:hidden;" +
                    ("width:" + _this.theme.palette["iconButton"].size + ";") +
                    ("height:" + _this.theme.palette["iconButton"].size + ";") +
                    "cursor:pointer;" +
                    "outline:none;" +
                    "box-sizing:border-box;" +
                    "color:currentColor;" +
                    "display:inline-flex;" +
                    "position:relative;" +
                    "border-radius:50%;";
                return style;
            }),
            content: this.theme.setRootStyle('icnBtnCntnt', function () { return ("display:flex;" +
                "justify-content:inherit;" +
                "align-items:inherit;" +
                "width:inherit;" +
                "height:inherit;" +
                "overflow:inherit;" +
                "z-index:0;"); })
        };
    }
    return LyIconButtonService;
}());
LyIconButtonService.decorators = [
    { type: Injectable, args: [ProvidedInTheme,] },
];
LyIconButtonService.ctorParameters = function () { return [
    { type: LyTheme, },
]; };
LyIconButtonService.ngInjectableDef = defineInjectable({ factory: function LyIconButtonService_Factory() { return new LyIconButtonService(inject(LyTheme)); }, token: LyIconButtonService, providedIn: AlyleUIModule });
var LyIconButton = /** @class */ (function () {
    function LyIconButton(elementRef, renderer, bgAndColor, iconButtonService) {
        this.elementRef = elementRef;
        this.bgAndColor = bgAndColor;
        this.iconButtonService = iconButtonService;
        renderer.addClass(elementRef.nativeElement, iconButtonService.classes.host);
        if (bgAndColor) {
            bgAndColor.setAutoContrast();
        }
    }
    return LyIconButton;
}());
LyIconButton.decorators = [
    { type: Component, args: [{
                selector: 'button[ly-icon-button], a[ly-icon-button], span[ly-icon-button]',
                template: "\n  <div class=\"{{ iconButtonService.classes.content }}\"\n  lyRipple\n  lyRippleCentered\n  >\n    <ng-content></ng-content>\n  </div>\n  ",
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                exportAs: 'lyIconButton'
            },] },
];
LyIconButton.ctorParameters = function () { return [
    { type: ElementRef, },
    { type: Renderer2, },
    { type: LyBgColorAndRaised, decorators: [{ type: Optional },] },
    { type: LyIconButtonService, },
]; };
LyIconButton.propDecorators = {
    "ripple": [{ type: ViewChild, args: [LyRipple,] },],
};
var LyIconButtonModule = /** @class */ (function () {
    function LyIconButtonModule() {
    }
    return LyIconButtonModule;
}());
LyIconButtonModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule, LyRippleModule],
                exports: [LyIconButton],
                declarations: [LyIconButton],
            },] },
];

export { LyIconButtonModule, LyIconButton, LyIconButtonService as Éµa };
//# sourceMappingURL=alyle-ui-icon-button.js.map
