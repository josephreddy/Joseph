(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@alyle/ui'), require('@angular/core'), require('@alyle/ui/ripple'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define('ly.iconButton', ['exports', '@alyle/ui', '@angular/core', '@alyle/ui/ripple', '@angular/common'], factory) :
	(factory((global.ly = global.ly || {}, global.ly.iconButton = {}),global.ly.core,global.ng.core,global.ly.ripple,global.ng.common));
}(this, (function (exports,ui,core,ripple,common) { 'use strict';

var LyIconButtonService = /** @class */ (function () {
    function LyIconButtonService(theme) {
        var _this = this;
        this.theme = theme;
        this.classes = {
            host: this.theme.setStyle('icnBtn', function () {
                var style = "-webkit-user-select:none;" +
                    "-moz-user-select:none;" +
                    "-ms-user-select:none;" +
                    "user-select:none;" +
                    "-webkit-tap-highlight-color:rgba(0, 0, 0, 0);" +
                    "justify-content: center;" +
                    "align-items: center;" +
                    "background:transparent;" +
                    "border:0;" +
                    "padding:0;" +
                    "overflow:hidden;" +
                    ("width:" + _this.theme.palette["iconButton"].size + ";") +
                    ("height:" + _this.theme.palette["iconButton"].size + ";") +
                    "cursor:pointer;" +
                    "outline:none;" +
                    "box-sizing:border-box;" +
                    "color:currentColor;" +
                    "display:inline-flex;" +
                    "position:relative;" +
                    "border-radius:50%;";
                return style;
            }),
            content: this.theme.setRootStyle('icnBtnCntnt', function () { return ("display:flex;" +
                "justify-content:inherit;" +
                "align-items:inherit;" +
                "width:inherit;" +
                "height:inherit;" +
                "overflow:inherit;" +
                "z-index:0;"); })
        };
    }
    return LyIconButtonService;
}());
LyIconButtonService.decorators = [
    { type: core.Injectable, args: [ui.ProvidedInTheme,] },
];
LyIconButtonService.ctorParameters = function () { return [
    { type: ui.LyTheme, },
]; };
LyIconButtonService.ngInjectableDef = core.defineInjectable({ factory: function LyIconButtonService_Factory() { return new LyIconButtonService(core.inject(ui.LyTheme)); }, token: LyIconButtonService, providedIn: ui.AlyleUIModule });
var LyIconButton = /** @class */ (function () {
    function LyIconButton(elementRef, renderer, bgAndColor, iconButtonService) {
        this.elementRef = elementRef;
        this.bgAndColor = bgAndColor;
        this.iconButtonService = iconButtonService;
        renderer.addClass(elementRef.nativeElement, iconButtonService.classes.host);
        if (bgAndColor) {
            bgAndColor.setAutoContrast();
        }
    }
    return LyIconButton;
}());
LyIconButton.decorators = [
    { type: core.Component, args: [{
                selector: 'button[ly-icon-button], a[ly-icon-button], span[ly-icon-button]',
                template: "\n  <div class=\"{{ iconButtonService.classes.content }}\"\n  lyRipple\n  lyRippleCentered\n  >\n    <ng-content></ng-content>\n  </div>\n  ",
                preserveWhitespaces: false,
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                exportAs: 'lyIconButton'
            },] },
];
LyIconButton.ctorParameters = function () { return [
    { type: core.ElementRef, },
    { type: core.Renderer2, },
    { type: ui.LyBgColorAndRaised, decorators: [{ type: core.Optional },] },
    { type: LyIconButtonService, },
]; };
LyIconButton.propDecorators = {
    "ripple": [{ type: core.ViewChild, args: [ripple.LyRipple,] },],
};
var LyIconButtonModule = /** @class */ (function () {
    function LyIconButtonModule() {
    }
    return LyIconButtonModule;
}());
LyIconButtonModule.decorators = [
    { type: core.NgModule, args: [{
                imports: [common.CommonModule, ripple.LyRippleModule],
                exports: [LyIconButton],
                declarations: [LyIconButton],
            },] },
];

exports.LyIconButtonModule = LyIconButtonModule;
exports.LyIconButton = LyIconButton;
exports.Éµa = LyIconButtonService;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=alyle-ui-icon-button.umd.js.map
