{
  "version": 3,
  "file": "alyle-ui-ripple.umd.min.js",
  "sources": [
    "ng://@alyle/ui/ripple/out/ripple.ts",
    "ng://@alyle/ui/ripple/out/ripple.service.ts",
    "ng://@alyle/ui/ripple/out/ripple.directive.ts",
    "ng://@alyle/ui/ripple/out/ripple.module.ts"
  ],
  "sourcesContent": [
    "import { ElementRef, NgZone, Renderer2 } from '@angular/core';\nimport { Platform } from '@alyle/ui';\n\nexport interface RippleConfig {\n  centered?: boolean;\n  disabled?: boolean;\n  sensitive?: boolean;\n  radius?: 'containerSize' | number;\n  percentageToIncrease?: number;\n}\n\nexport class RippleRef {\n  state = true;\n  timestamp = -Date.now();\n  readonly container: HTMLElement = document.createElement('span');\n  end() {\n    this.state = false;\n    this.timestamp += Date.now();\n  }\n}\n\nexport class Ripple {\n  private _rippleRef: RippleRef;\n  private _state = true;\n  private _eventHandlers: Map<string, (e: Event) => void> = new Map<string, (e: Event) => void>();\n  private rippleConfig: RippleConfig = {};\n  private _transitionDuration = '950ms';\n  private _eventOptions = {passive: true} as any;\n  constructor(\n    private _ngZone: NgZone,\n    private stylesData: string[],\n    private _containerElement: HTMLElement,\n    private _triggerElement?: HTMLElement\n  ) {\n    if (Platform.isBrowser) {\n      if (typeof TouchEvent === 'function' && !!TouchEvent) {\n        this._eventHandlers.set('pointerdown', this.onPointerDown.bind(this));\n        this._eventHandlers.set('touchend', this.onPointerLeave.bind(this));\n      } else {\n        this._eventHandlers.set('mousedown', this.onPointerDown.bind(this));\n      }\n      this._eventHandlers.set('mouseup', this.onPointerLeave.bind(this));\n      this._eventHandlers.set('mouseleave', this.onPointerLeave.bind(this));\n      if (!_triggerElement) {\n        _triggerElement = _containerElement;\n      }\n      this.setTriggerElement(_triggerElement);\n    }\n  }\n\n  setConfig(config: RippleConfig) {\n    this.rippleConfig = config;\n  }\n\n  private get _rectContainer(): ClientRect {\n    return this._containerElement.getBoundingClientRect();\n  }\n\n  private setTriggerElement(element: HTMLElement | null) {\n    if (element) {\n      element.classList.add(this.stylesData[0]);\n      // this._renderer.addClass(element, this.stylesData[0].id);\n      this._ngZone.runOutsideAngular(() => {\n        this._eventHandlers.forEach((fn, type) => element.addEventListener(type, fn, this._eventOptions));\n      });\n    }\n\n    this._triggerElement = element;\n  }\n\n  private createRipple(styles: {[key: string]: number | string}) {\n    this._rippleRef = new RippleRef();\n    const container = this._rippleRef.container;\n    container.className = this.stylesData[1];\n    for (const key in styles) {\n      if (styles.hasOwnProperty(key)) {\n        const element = styles[key];\n        if (typeof element === 'number') {\n          container.style[key] = `${element}px`;\n        } else {\n          container.style[key] = element;\n        }\n      }\n    }\n    this._containerElement.appendChild(container);\n    window.getComputedStyle(container).getPropertyValue('opacity');\n    container.style.transform = `scale(1)`;\n  }\n\n  private onPointerDown(event: MouseEvent) {\n    if (!this.rippleConfig.disabled) {\n      /**Destroy previous ripple if exist */\n      this.endRipple();\n      this.startRipple(event, this.rippleConfig);\n    }\n  }\n  private onPointerLeave(event: MouseEvent) {\n    if (!this.rippleConfig.disabled) {\n      this.endRipple();\n    }\n  }\n\n  startRipple(event: MouseEvent | PointerEvent, rippleConfig: RippleConfig) {\n    const containerRect = this._rectContainer;\n    let x = event.clientX,\n    y = event.clientY;\n    if (rippleConfig.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    const left = x - containerRect.left;\n    const top = y - containerRect.top;\n    let radius = rippleConfig.radius === 'containerSize' ? maxSize(containerRect) / 2 : rippleConfig.radius || rippleRadius(x, y, containerRect);\n    if (rippleConfig.percentageToIncrease) {\n      radius += radius * rippleConfig.percentageToIncrease / 100;\n    }\n    const ripple = this.createRipple({\n      left: left - radius,\n      top: top - radius,\n      width: radius * 2,\n      height: radius * 2,\n      transitionDuration: this._transitionDuration\n    });\n  }\n\n  private runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n  endRipple() {\n    const rippleRef: RippleRef = this._rippleRef || null;\n    const duration = parseFloat(this._transitionDuration);\n    if (rippleRef && rippleRef.state) {\n      rippleRef.end();\n      this.runTimeoutOutsideZone(() => {\n        rippleRef.container.style.opacity = '0';\n        rippleRef.container.style.transitionDuration = '200ms';\n      // }, rippleRef.timestamp < duration ? duration : 0);\n      // }, rippleRef.timestamp < duration ? duration / (duration * .001 + 1) : 0);\n      }, rippleRef.timestamp < duration ? duration * .15 : 0);\n      this.runTimeoutOutsideZone(() => {\n        rippleRef.container.parentNode.removeChild(rippleRef.container);\n      // }, rippleRef.timestamp < duration ? duration * 2 : duration);\n      // }, rippleRef.timestamp < duration ? duration / (duration * .001 + 1) * 2 : duration);\n      }, rippleRef.timestamp < duration ? duration * 2 : duration);\n    }\n  }\n  removeEvents() {\n    if (this._triggerElement) {\n      this._eventHandlers.forEach((fn, type) => {\n        this._triggerElement.removeEventListener(type, fn, this._eventOptions);\n      });\n    }\n  }\n\n}\n\nfunction rippleRadius(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\nfunction maxSize(rect: ClientRect) {\n  return Math.max(rect.width, rect.height);\n}\n",
    "import { Injectable, Inject, Renderer2, ElementRef } from '@angular/core';\nimport { LyTheme, LyRootService, ProvidedInTheme } from '@alyle/ui';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable(ProvidedInTheme)\nexport class LyRippleService {\n  stylesData: string[] = [];\n  classes = {\n    root: this.theme.setRootStyle(\n      'ripple',\n      () => (\n        `z-index: 0;` +\n        `border-radius: inherit;`\n      )\n    )\n  };\n  constructor(\n    private theme: LyTheme\n  ) {\n    const host = this.theme.setRootStyle('ripple', () => {\n      return 'position: relative;';\n    });\n    const rippleContainer = this.theme.setRootStyle('ripple-cont', () => {\n      return `position: absolute;` +\n      `width: 5px;` +\n      `height: 5px;` +\n      `background: currentColor;` +\n      `opacity: .19;` +\n      `border-radius: 100%;` +\n      `-webkit-transform: scale(0);` +\n      `transform: scale(0);` +\n      `-webkit-transition: opacity ease,-webkit-transform cubic-bezier(.1, 1, 0.5, 1);` +\n      `transition: opacity ease,-webkit-transform cubic-bezier(.1, 1, 0.5, 1);` +\n      `transition: opacity ease,transform cubic-bezier(.1, 1, 0.5, 1);` +\n      `transition: opacity ease,transform cubic-bezier(.1, 1, 0.5, 1);` +\n      `pointer-events: none;`;\n    });\n    this.stylesData.push(host, rippleContainer);\n  }\n\n}\n",
    "import {\n  ElementRef,\n  forwardRef,\n  Input,\n  Directive,\n  ChangeDetectionStrategy,\n  NgZone,\n  OnInit,\n  OnDestroy,\n  Optional,\n  HostBinding,\n  HostListener,\n  AfterViewInit,\n  Renderer2,\n  OnChanges,\n  SimpleChanges,\n  Inject,\n  PLATFORM_ID\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { toBoolean, LyFocusState, Platform } from '@alyle/ui';\nimport { Ripple, RippleConfig } from './ripple';\nimport { LyRippleService } from './ripple.service';\n\n@Directive({\n  selector: '[lyRipple], [ly-ripple]',\n  exportAs: 'lyRipple'\n})\nexport class LyRipple implements OnInit, OnChanges, OnDestroy {\n  rippleContainer: Ripple;\n  private _containerElement: HTMLElement | null;\n  @Input() lyRippleCentered: boolean;\n  @Input() lyRippleDisabled: boolean;\n  @Input() lyRippleSensitive: boolean;\n  @Input() lyRippleRadius: 'containerSize' | number;\n  @Input() lyRipplePercentageToIncrease: number;\n  get lyRippleConfig(): RippleConfig {\n    return {\n      centered: toBoolean(this.lyRippleCentered),\n      disabled: toBoolean(this.lyRippleDisabled),\n      sensitive: toBoolean(this.lyRippleSensitive),\n      radius: this.lyRippleRadius,\n      percentageToIncrease: this.lyRipplePercentageToIncrease,\n    };\n  }\n  constructor(\n    private rippleService: LyRippleService,\n    public _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    private _renderer: Renderer2\n  ) {\n    if (Platform.isBrowser) {\n      this.rippleContainer = new Ripple(this._ngZone, this.rippleService.stylesData, this._elementRef.nativeElement);\n    }\n  }\n\n  ngOnInit() {\n    this._updateRipple();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._updateRipple();\n  }\n\n  private _updateRipple() {\n    if (Platform.isBrowser) {\n      this.rippleContainer.setConfig(this.lyRippleConfig);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.rippleContainer) {\n      this.rippleContainer.removeEvents();\n    }\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyRipple } from './ripple.directive';\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [LyRipple],\n  exports: [LyRipple]\n})\nexport class LyRippleModule { }\n"
  ],
  "names": [
    "RippleRef",
    "this",
    "state",
    "timestamp",
    "Date",
    "now",
    "container",
    "document",
    "createElement",
    "prototype",
    "end",
    "Ripple",
    "_ngZone",
    "stylesData",
    "_containerElement",
    "_triggerElement",
    "_state",
    "_eventHandlers",
    "Map",
    "rippleConfig",
    "_transitionDuration",
    "_eventOptions",
    "passive",
    "Platform",
    "isBrowser",
    "TouchEvent",
    "set",
    "onPointerDown",
    "bind",
    "onPointerLeave",
    "setTriggerElement",
    "setConfig",
    "config",
    "Object",
    "defineProperty",
    "get",
    "getBoundingClientRect",
    "element",
    "_this",
    "classList",
    "add",
    "runOutsideAngular",
    "forEach",
    "fn",
    "type",
    "addEventListener",
    "createRipple",
    "styles",
    "_rippleRef",
    "key",
    "className",
    "hasOwnProperty",
    "style",
    "appendChild",
    "window",
    "getComputedStyle",
    "getPropertyValue",
    "transform",
    "event",
    "disabled",
    "endRipple",
    "startRipple",
    "containerRect",
    "_rectContainer",
    "x",
    "clientX",
    "y",
    "clientY",
    "centered",
    "left",
    "width",
    "top",
    "height",
    "rect",
    "distX",
    "distY",
    "radius",
    "Math",
    "max",
    "abs",
    "right",
    "bottom",
    "sqrt",
    "percentageToIncrease",
    "transitionDuration",
    "runTimeoutOutsideZone",
    "delay",
    "setTimeout",
    "rippleRef",
    "duration",
    "parseFloat",
    "opacity",
    "parentNode",
    "removeChild",
    "removeEvents",
    "removeEventListener",
    "LyRippleService",
    "theme",
    "classes",
    "root",
    "setRootStyle",
    "host",
    "rippleContainer",
    "push",
    "Injectable",
    "args",
    "ProvidedInTheme",
    "LyTheme",
    "LyRipple",
    "rippleService",
    "_elementRef",
    "_renderer",
    "nativeElement",
    "toBoolean",
    "lyRippleCentered",
    "lyRippleDisabled",
    "sensitive",
    "lyRippleSensitive",
    "lyRippleRadius",
    "lyRipplePercentageToIncrease",
    "ngOnInit",
    "_updateRipple",
    "ngOnChanges",
    "changes",
    "lyRippleConfig",
    "ngOnDestroy",
    "Directive",
    "selector",
    "exportAs",
    "ElementRef",
    "NgZone",
    "Renderer2",
    "Input",
    "LyRippleModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
