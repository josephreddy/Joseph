{
  "version": 3,
  "file": "alyle-ui-responsive.js",
  "sources": [
    "ng://@alyle/ui/responsive/out/responsive.module.ts",
    "ng://@alyle/ui/responsive/out/media/media.directive.ts",
    "ng://@alyle/ui/responsive/out/media.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule, NgZone, ModuleWithProviders, SkipSelf, Optional, Provider } from '@angular/core';\nimport { Responsive } from './media.service';\nimport { PLATFORM_ID } from '@angular/core';\nimport { MediaDirective } from './media/media.directive';\n\nexport function responsiveProviderFactory(\n  parent: Responsive, ngZone: NgZone, platformId: Object): Responsive {\nreturn parent || new Responsive(ngZone, platformId);\n}\n\nexport const responsiveProvider: Provider = {\n  provide: Responsive,\n  deps: [[new Optional(), new SkipSelf(), Responsive], NgZone, PLATFORM_ID],\n  useFactory: responsiveProviderFactory\n};\n\n@NgModule({\n  declarations: [MediaDirective],\n  exports: [MediaDirective],\n  providers: [responsiveProvider]\n})\nexport class ResponsiveModule { }\n",
    "import {\n  Directive,\n  Input,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ComponentRef,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  EmbeddedViewRef,\n  Inject\n} from '@angular/core';\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\nimport { Responsive } from '../media.service';\n\n@Directive({\n  selector: '[lyResponsive]'\n})\nexport class MediaDirective implements OnInit, OnDestroy {\n  private _media: string;\n  view: Subscription;\n  private _TemplateRef: TemplateRef<any>|null = null;\n\n  @Input()\n  set lyResponsive(val: string) {\n    this._media = val;\n    this.updateView();\n  }\n\n  get media(): string {\n    return this._media;\n  }\n  constructor(\n    private _viewContainer: ViewContainerRef,\n    templateRef: TemplateRef<any>,\n    private mediaService: Responsive,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this._TemplateRef = templateRef;\n  }\n\n  ngOnInit() {\n    this.view = this.mediaService.stateView().subscribe(() => {\n      this.updateView();\n    });\n  }\n\n  updateView() {\n    if (isPlatformServer(this.platformId) || this.mediaService.matchMedia(this._media)) {\n      if (this._viewContainer.length === 0) {\n        this._viewContainer.createEmbeddedView(this._TemplateRef);\n      }\n    } else if (this._viewContainer.length !== 0) {\n      this._viewContainer.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.view) {\n      this.view.unsubscribe();\n    }\n  }\n\n}\n",
    "import { Platform } from '@alyle/ui';\nimport { Injectable, NgZone, Inject } from '@angular/core';\nimport { Observable ,  fromEvent ,  merge, of ,  Subscription } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\nimport { MediaQueries } from './media-queries';\nimport { PLATFORM_ID, APP_ID } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n@Injectable()\nexport class Responsive {\n  private static _queryMap: Map<string, boolean> = new Map<string, boolean>();\n  constructor(\n    private _ngZone: NgZone,\n    @Inject(PLATFORM_ID) private platformId: Object) { }\n\n  matchMedia(val: string): boolean {\n    return !Platform.isBrowser ? false : matchMedia(val).matches;\n  }\n\n  /**\n   * return Observable<boolean>\n   */\n  observe(value: string): Observable<boolean> {\n    let mm = this.matchMedia(value);\n    const mediaObservable = merge(of(true), this.stateView());\n    return mediaObservable\n    .pipe(\n      filter((state) => {\n        return this.matchMedia(value) !== mm || state === true;\n      },\n      map(() => {\n        mm = this.matchMedia(value);\n        this._registerMedia(value);\n        return this.matchMedia(value);\n      })\n    ));\n  }\n\n  private _registerMedia(value: string) {\n    Responsive._queryMap.set(value, this.matchMedia(value));\n  }\n\n  stateView(): Observable<any> {\n    if (isPlatformBrowser(this.platformId)) {\n      return this._ngZone.runOutsideAngular(() => {\n        return fromEvent(window, 'resize');\n      });\n    }\n    if (isPlatformServer(this.platformId)) {\n      return of();\n    }\n  }\n\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
