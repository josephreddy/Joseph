{
  "version": 3,
  "file": "alyle-ui-responsive.umd.min.js",
  "sources": [
    "ng://@alyle/ui/responsive/out/media.service.ts",
    "ng://@alyle/ui/responsive/out/media/media.directive.ts",
    "ng://@alyle/ui/responsive/out/responsive.module.ts"
  ],
  "sourcesContent": [
    "import { Platform } from '@alyle/ui';\nimport { Injectable, NgZone, Inject } from '@angular/core';\nimport { Observable ,  fromEvent ,  merge, of ,  Subscription } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\nimport { MediaQueries } from './media-queries';\nimport { PLATFORM_ID, APP_ID } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n@Injectable()\nexport class Responsive {\n  private static _queryMap: Map<string, boolean> = new Map<string, boolean>();\n  constructor(\n    private _ngZone: NgZone,\n    @Inject(PLATFORM_ID) private platformId: Object) { }\n\n  matchMedia(val: string): boolean {\n    return !Platform.isBrowser ? false : matchMedia(val).matches;\n  }\n\n  /**\n   * return Observable<boolean>\n   */\n  observe(value: string): Observable<boolean> {\n    let mm = this.matchMedia(value);\n    const mediaObservable = merge(of(true), this.stateView());\n    return mediaObservable\n    .pipe(\n      filter((state) => {\n        return this.matchMedia(value) !== mm || state === true;\n      },\n      map(() => {\n        mm = this.matchMedia(value);\n        this._registerMedia(value);\n        return this.matchMedia(value);\n      })\n    ));\n  }\n\n  private _registerMedia(value: string) {\n    Responsive._queryMap.set(value, this.matchMedia(value));\n  }\n\n  stateView(): Observable<any> {\n    if (isPlatformBrowser(this.platformId)) {\n      return this._ngZone.runOutsideAngular(() => {\n        return fromEvent(window, 'resize');\n      });\n    }\n    if (isPlatformServer(this.platformId)) {\n      return of();\n    }\n  }\n\n}\n",
    "import {\n  Directive,\n  Input,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ComponentRef,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  EmbeddedViewRef,\n  Inject\n} from '@angular/core';\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\nimport { Responsive } from '../media.service';\n\n@Directive({\n  selector: '[lyResponsive]'\n})\nexport class MediaDirective implements OnInit, OnDestroy {\n  private _media: string;\n  view: Subscription;\n  private _TemplateRef: TemplateRef<any>|null = null;\n\n  @Input()\n  set lyResponsive(val: string) {\n    this._media = val;\n    this.updateView();\n  }\n\n  get media(): string {\n    return this._media;\n  }\n  constructor(\n    private _viewContainer: ViewContainerRef,\n    templateRef: TemplateRef<any>,\n    private mediaService: Responsive,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this._TemplateRef = templateRef;\n  }\n\n  ngOnInit() {\n    this.view = this.mediaService.stateView().subscribe(() => {\n      this.updateView();\n    });\n  }\n\n  updateView() {\n    if (isPlatformServer(this.platformId) || this.mediaService.matchMedia(this._media)) {\n      if (this._viewContainer.length === 0) {\n        this._viewContainer.createEmbeddedView(this._TemplateRef);\n      }\n    } else if (this._viewContainer.length !== 0) {\n      this._viewContainer.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.view) {\n      this.view.unsubscribe();\n    }\n  }\n\n}\n",
    "import { NgModule, NgZone, ModuleWithProviders, SkipSelf, Optional, Provider } from '@angular/core';\nimport { Responsive } from './media.service';\nimport { PLATFORM_ID } from '@angular/core';\nimport { MediaDirective } from './media/media.directive';\n\nexport function responsiveProviderFactory(\n  parent: Responsive, ngZone: NgZone, platformId: Object): Responsive {\nreturn parent || new Responsive(ngZone, platformId);\n}\n\nexport const responsiveProvider: Provider = {\n  provide: Responsive,\n  deps: [[new Optional(), new SkipSelf(), Responsive], NgZone, PLATFORM_ID],\n  useFactory: responsiveProviderFactory\n};\n\n@NgModule({\n  declarations: [MediaDirective],\n  exports: [MediaDirective],\n  providers: [responsiveProvider]\n})\nexport class ResponsiveModule { }\n"
  ],
  "names": [
    "Responsive",
    "_ngZone",
    "platformId",
    "this",
    "prototype",
    "matchMedia",
    "val",
    "Platform",
    "isBrowser",
    "matches",
    "observe",
    "value",
    "_this",
    "mm",
    "merge",
    "of",
    "stateView",
    "pipe",
    "filter",
    "state",
    "map",
    "_registerMedia",
    "_queryMap",
    "set",
    "isPlatformBrowser",
    "runOutsideAngular",
    "fromEvent",
    "window",
    "isPlatformServer",
    "Map",
    "type",
    "Injectable",
    "NgZone",
    "Object",
    "decorators",
    "Inject",
    "args",
    "PLATFORM_ID",
    "MediaDirective",
    "_viewContainer",
    "templateRef",
    "mediaService",
    "_TemplateRef",
    "defineProperty",
    "_media",
    "updateView",
    "get",
    "ngOnInit",
    "view",
    "subscribe",
    "length",
    "createEmbeddedView",
    "clear",
    "ngOnDestroy",
    "unsubscribe",
    "responsiveProviderFactory",
    "parent",
    "ngZone",
    "Directive",
    "selector",
    "ViewContainerRef",
    "TemplateRef",
    "lyResponsive",
    "Input",
    "responsiveProvider",
    "provide",
    "deps",
    "Optional",
    "SkipSelf",
    "useFactory",
    "ResponsiveModule",
    "NgModule",
    "declarations",
    "exports",
    "providers"
  ],
  "mappings": "2dAAA,IAAAA,EAAA,WAUE,SAAFA,EACYC,EACqBC,GADrBC,KAAZF,QAAYA,EACqBE,KAAjCD,WAAiCA,SAE/BF,EAAFI,UAAAC,WAAE,SAAWC,GACT,QAAQC,EAAAA,SAASC,WAAoBH,WAAWC,GAAKG,SAMvDT,EAAFI,UAAAM,QAAE,SAAQC,GAAR,IAAFC,EAAAT,KACQU,EAAKV,KAAKE,WAAWM,GAEzB,OADwBG,EAAAA,MAAMC,EAAAA,IAAG,GAAOZ,KAAKa,aAE5CC,KACCC,EAAAA,OAAO,SAACC,GACN,OAAOP,EAAKP,WAAWM,KAAWE,IAAgB,IAAVM,GAE1CC,EAAAA,IAAI,WAGF,OAFAP,EAAKD,EAAKP,WAAWM,GACrBC,EAAKS,eAAeV,GACbC,EAAKP,WAAWM,QAKrBX,EAAVI,UAAAiB,eAAU,SAAeV,GACrBX,EAAWsB,UAAUC,IAAIZ,EAAOR,KAAKE,WAAWM,KAGlDX,EAAFI,UAAAY,UAAE,WACE,OAAIQ,EAAAA,kBAAkBrB,KAAKD,YAClBC,KAAKF,QAAQwB,kBAAkB,WACpC,OAAOC,EAAAA,UAAUC,OAAQ,YAGzBC,EAAAA,iBAAiBzB,KAAKD,YACjBa,EAAAA,UADT,KA/CJ,GASAf,EAAAsB,UAAmD,IAAIO,kBAFvD,CAAAC,KAACC,EAAAA,gDAND,CAAAD,KAAqBE,EAAAA,QAWrB,CAAAF,KAAAG,OAAAC,WAAA,CAAA,CAAAJ,KAAKK,EAAAA,OAALC,KAAA,CAAYC,EAAAA,kBCZZ,IAAAC,EAAA,WAoCE,SAAFA,EACYC,EACRC,EACQC,EACqBvC,GAHrBC,KAAZoC,eAAYA,EAEApC,KAAZsC,aAAYA,EACqBtC,KAAjCD,WAAiCA,EAfjCC,KAAAuC,aAAgD,KAiB5CvC,KAAKuC,aAAeF,SAdxBP,OAAAU,eAAML,EAANlC,UAAA,eAAA,CAAAmB,IAAA,SAAmBjB,GACfH,KAAKyC,OAAStC,EACdH,KAAK0C,8CAGPZ,OAAFU,eAAML,EAANlC,UAAA,QAAA,CAAA0C,IAAE,WACE,OAAO3C,KAAKyC,wCAWdN,EAAFlC,UAAA2C,SAAE,WAAA,IAAFnC,EAAAT,KACIA,KAAK6C,KAAO7C,KAAKsC,aAAazB,YAAYiC,UAAU,WAClDrC,EAAKiC,gBAITP,EAAFlC,UAAAyC,WAAE,WACMjB,EAAAA,iBAAiBzB,KAAKD,aAAeC,KAAKsC,aAAapC,WAAWF,KAAKyC,QACtC,IAA/BzC,KAAKoC,eAAeW,QACtB/C,KAAKoC,eAAeY,mBAAmBhD,KAAKuC,cAEN,IAA/BvC,KAAKoC,eAAeW,QAC7B/C,KAAKoC,eAAea,SAIxBd,EAAFlC,UAAAiD,YAAE,WACMlD,KAAK6C,MACP7C,KAAK6C,KAAKM,iBA/DhB,GCKA,SAAAC,EACEC,EAAoBC,EAAgBvD,GACtC,OAAOsD,GAAU,IAAIxD,EAAWyD,EAAQvD,iBDYxC,CAAA4B,KAAC4B,EAAAA,UAADtB,KAAA,CAAW,CACTuB,SAAU,wDAfZ,CAAA7B,KAAE8B,EAAAA,kBAFF,CAAA9B,KAAE+B,EAAAA,aAcF,CAAA/B,KAAS9B,GAuBT,CAAA8B,KAAAG,OAAAC,WAAA,CAAA,CAAAJ,KAAKK,EAAAA,OAALC,KAAA,CAAYC,EAAAA,oCAbZyB,aAAA,CAAA,CAAAhC,KAAGiC,EAAAA,SCjBH,IAAaC,EAA+B,CAC1CC,QAASjE,EACTkE,KAAM,CAAC,CAAC,IAAIC,EAAAA,SAAY,IAAIC,EAAAA,SAAYpE,GAAagC,EAAAA,OAAQK,EAAAA,aAC7DgC,WAAYd,GAQde,EAAA,2BALA,CAAAxC,KAACyC,EAAAA,SAADnC,KAAA,CAAU,CACRoC,aAAc,CAAClC,GACfmC,QAAS,CAACnC,GACVoC,UAAW,CAACV"
}
